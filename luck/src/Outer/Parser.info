-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.5 from Parser.y
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_parser -> program                           (0)
	%start_typeParser -> type                          (1)
	program -> decls                                   (2)
	decls ->                                           (3)
	decls -> 'data' dataDecl decls                     (4)
	decls -> 'fun' funDecl decls                       (5)
	decls -> 'sig' sigDecl decls                       (6)
	sigDecl -> VARID '::' type                         (7)
	dataDecl -> type '=' constrs                       (8)
	constrs -> constr                                  (9)
	constrs -> constrs '|' constr                      (10)
	constr -> btype                                    (11)
	btype -> btype1                                    (12)
	btype1 -> btype1 atype                             (13)
	btype1 -> atype                                    (14)
	atype -> gtycon                                    (15)
	atype -> VARID                                     (16)
	atype -> '(' types ')'                             (17)
	atype -> '[' type ']'                              (18)
	atype -> '(' type ')'                              (19)
	gtycon -> CONID                                    (20)
	types -> types ',' type                            (21)
	types -> type ',' type                             (22)
	type -> btype '->' type                            (23)
	type -> btype                                      (24)
	funDecl -> VARID vars '=' exp                      (25)
	vars -> VARID                                      (26)
	vars -> VARID vars                                 (27)
	sexp -> INT                                        (28)
	sexp -> CONID                                      (29)
	sexp -> VARID                                      (30)
	sexp -> '()'                                       (31)
	sexp -> '(' exp ')'                                (32)
	sexp -> '(' ccexps ')'                             (33)
	sexp -> '[' exps ']'                               (34)
	exp -> sexp                                        (35)
	exp -> sexp sexps                                  (36)
	exp -> '+' exp                                     (37)
	exp -> '-' exp                                     (38)
	exp -> 'not' exp                                   (39)
	exp -> exp '+' exp                                 (40)
	exp -> exp '-' exp                                 (41)
	exp -> exp '*' exp                                 (42)
	exp -> exp '/' exp                                 (43)
	exp -> exp '&&' exp                                (44)
	exp -> exp '{' exp '}' '||' '{' exp '}' exp        (45)
	exp -> exp '||' exp                                (46)
	exp -> exp '==' exp                                (47)
	exp -> exp '/=' exp                                (48)
	exp -> exp '<' exp                                 (49)
	exp -> exp '>' exp                                 (50)
	exp -> exp '<=' exp                                (51)
	exp -> exp '>=' exp                                (52)
	exp -> exp ':' exp                                 (53)
	exp -> 'case' exp 'of' branches 'end'              (54)
	exp -> 'let' decls 'in' exp                        (55)
	exp -> 'let\'' pat '=' exp 'in' exp                (56)
	exp -> 'if' exp 'then' exp 'else' exp              (57)
	exp -> 'fix' '{' exp '}'                           (58)
	exp -> 'fresh' '{' VARID ':' btype '}' 'in' exp    (59)
	exp -> exp '!' VARID                               (60)
	exp -> 'trace' VARID '(' exp ')'                   (61)
	exp -> 'collect' '{' exp '}' exp                   (62)
	sexps -> sexp                                      (63)
	sexps -> sexp sexps                                (64)
	exps ->                                            (65)
	exps -> cexps                                      (66)
	cexps -> exp                                       (67)
	cexps -> ccexps                                    (68)
	ccexps -> exp ',' cexps                            (69)
	branches -> branch                                 (70)
	branches -> branch branches                        (71)
	branch -> '|' pat '->' exp                         (72)
	branch -> '|' VARID '%' pat '->' exp               (73)
	branch -> '|' INT '%' pat '->' exp                 (74)
	pat -> ppat                                        (75)
	pat -> CONID ppats                                 (76)
	pat -> pat ':' pat                                 (77)
	ppat -> '_'                                        (78)
	ppat -> VARID                                      (79)
	ppat -> CONID                                      (80)
	ppat -> '()'                                       (81)
	ppat -> '(' pat ')'                                (82)
	ppat -> '(' ccpats ')'                             (83)
	ppat -> '[' ']'                                    (84)
	ppat -> '[' cpats ']'                              (85)
	ppats -> ppat                                      (86)
	ppats -> ppat ppats                                (87)
	cpats -> pat                                       (88)
	cpats -> ccpats                                    (89)
	ccpats -> pat ',' cpats                            (90)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'='            { L _ TAssign }
	INT            { L _ (TInt _) }
	VARID          { L _ (TVar _) }
	CONID          { L _ (TCon _) }
	'()'           { L _ TUnit }
	'('            { L _ TLParen }
	')'            { L _ TRParen }
	'['            { L _ TLBracket }
	']'            { L _ TRBracket }
	'{'            { L _ TLCurBracket }
	'}'            { L _ TRCurBracket }
	'!'            { L _ TBang }
	'case'         { L _ TCase }
	'of'           { L _ TOf }
	'end'          { L _ TEnd }
	'let'          { L _ TLet }
	'let\''        { L _ TLetPrime }
	'in'           { L _ TIn }
	'if'           { L _ TIf }
	'then'         { L _ TThen }
	'else'         { L _ TElse }
	'data'         { L _ TData }
	'sig'          { L _ TSig }
	'fun'          { L _ TFun }
	'trace'        { L _ TTRACE }
	'fix'          { L _ TFix }
	'fresh'        { L _ TFresh }
	'collect'      { L _ TCollect }
	'_'            { L _ TUnd }
	'::'           { L _ TCons }
	':'            { L _ TColon }
	','            { L _ TComma }
	'not'          { L _ TNot }
	'+'            { L _ TPlus }
	'-'            { L _ TMinus }
	'*'            { L _ TTimes }
	'/'            { L _ TDiv }
	'%'            { L _ TPercent }
	'&&'           { L _ TLAnd }
	'||'           { L _ TLOr }
	'=='           { L _ TEq }
	'/='           { L _ TNe }
	'<'            { L _ TLt }
	'>'            { L _ TGt }
	'<='           { L _ TLe }
	'>='           { L _ TGe }
	'->'           { L _ TArrow }
	'|'            { L _ TBar }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_parser   rule  0
	%start_typeParser rule  1
	program         rule  2
	decls           rules 3, 4, 5, 6
	sigDecl         rule  7
	dataDecl        rule  8
	constrs         rules 9, 10
	constr          rule  11
	btype           rule  12
	btype1          rules 13, 14
	atype           rules 15, 16, 17, 18, 19
	gtycon          rule  20
	types           rules 21, 22
	type            rules 23, 24
	funDecl         rule  25
	vars            rules 26, 27
	sexp            rules 28, 29, 30, 31, 32, 33, 34
	exp             rules 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62
	sexps           rules 63, 64
	exps            rules 65, 66
	cexps           rules 67, 68
	ccexps          rule  69
	branches        rules 70, 71
	branch          rules 72, 73, 74
	pat             rules 75, 76, 77
	ppat            rules 78, 79, 80, 81, 82, 83, 84, 85
	ppats           rules 86, 87
	cpats           rules 88, 89
	ccpats          rule  90

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	'data'         shift, and enter state 4
	'sig'          shift, and enter state 5
	'fun'          shift, and enter state 6
	%eof           reduce using rule 3

	program        goto state 16
	decls          goto state 3

State 1


	VARID          shift, and enter state 12
	CONID          shift, and enter state 13
	'('            shift, and enter state 14
	'['            shift, and enter state 15

	btype          goto state 7
	btype1         goto state 8
	atype          goto state 9
	gtycon         goto state 10
	type           goto state 11

State 2


	'data'         shift, and enter state 4
	'sig'          shift, and enter state 5
	'fun'          shift, and enter state 6

	decls          goto state 3

State 3

	program -> decls .                                  (rule 2)

	%eof           reduce using rule 2


State 4

	decls -> 'data' . dataDecl decls                    (rule 4)

	VARID          shift, and enter state 12
	CONID          shift, and enter state 13
	'('            shift, and enter state 14
	'['            shift, and enter state 15

	dataDecl       goto state 26
	btype          goto state 7
	btype1         goto state 8
	atype          goto state 9
	gtycon         goto state 10
	type           goto state 27

State 5

	decls -> 'sig' . sigDecl decls                      (rule 6)

	VARID          shift, and enter state 25

	sigDecl        goto state 24

State 6

	decls -> 'fun' . funDecl decls                      (rule 5)

	VARID          shift, and enter state 23

	funDecl        goto state 22

State 7

	type -> btype . '->' type                           (rule 23)
	type -> btype .                                     (rule 24)

	'='            reduce using rule 24
	')'            reduce using rule 24
	']'            reduce using rule 24
	'in'           reduce using rule 24
	'data'         reduce using rule 24
	'sig'          reduce using rule 24
	'fun'          reduce using rule 24
	','            reduce using rule 24
	'->'           shift, and enter state 21
	%eof           reduce using rule 24


State 8

	btype -> btype1 .                                   (rule 12)
	btype1 -> btype1 . atype                            (rule 13)

	'='            reduce using rule 12
	VARID          shift, and enter state 12
	CONID          shift, and enter state 13
	'('            shift, and enter state 14
	')'            reduce using rule 12
	'['            shift, and enter state 15
	']'            reduce using rule 12
	'}'            reduce using rule 12
	'in'           reduce using rule 12
	'data'         reduce using rule 12
	'sig'          reduce using rule 12
	'fun'          reduce using rule 12
	','            reduce using rule 12
	'->'           reduce using rule 12
	'|'            reduce using rule 12
	%eof           reduce using rule 12

	atype          goto state 20
	gtycon         goto state 10

State 9

	btype1 -> atype .                                   (rule 14)

	'='            reduce using rule 14
	VARID          reduce using rule 14
	CONID          reduce using rule 14
	'('            reduce using rule 14
	')'            reduce using rule 14
	'['            reduce using rule 14
	']'            reduce using rule 14
	'}'            reduce using rule 14
	'in'           reduce using rule 14
	'data'         reduce using rule 14
	'sig'          reduce using rule 14
	'fun'          reduce using rule 14
	','            reduce using rule 14
	'->'           reduce using rule 14
	'|'            reduce using rule 14
	%eof           reduce using rule 14


State 10

	atype -> gtycon .                                   (rule 15)

	'='            reduce using rule 15
	VARID          reduce using rule 15
	CONID          reduce using rule 15
	'('            reduce using rule 15
	')'            reduce using rule 15
	'['            reduce using rule 15
	']'            reduce using rule 15
	'}'            reduce using rule 15
	'in'           reduce using rule 15
	'data'         reduce using rule 15
	'sig'          reduce using rule 15
	'fun'          reduce using rule 15
	','            reduce using rule 15
	'->'           reduce using rule 15
	'|'            reduce using rule 15
	%eof           reduce using rule 15


State 11

	%start_typeParser -> type .                         (rule 1)

	%eof           accept


State 12

	atype -> VARID .                                    (rule 16)

	'='            reduce using rule 16
	VARID          reduce using rule 16
	CONID          reduce using rule 16
	'('            reduce using rule 16
	')'            reduce using rule 16
	'['            reduce using rule 16
	']'            reduce using rule 16
	'}'            reduce using rule 16
	'in'           reduce using rule 16
	'data'         reduce using rule 16
	'sig'          reduce using rule 16
	'fun'          reduce using rule 16
	','            reduce using rule 16
	'->'           reduce using rule 16
	'|'            reduce using rule 16
	%eof           reduce using rule 16


State 13

	gtycon -> CONID .                                   (rule 20)

	'='            reduce using rule 20
	VARID          reduce using rule 20
	CONID          reduce using rule 20
	'('            reduce using rule 20
	')'            reduce using rule 20
	'['            reduce using rule 20
	']'            reduce using rule 20
	'}'            reduce using rule 20
	'in'           reduce using rule 20
	'data'         reduce using rule 20
	'sig'          reduce using rule 20
	'fun'          reduce using rule 20
	','            reduce using rule 20
	'->'           reduce using rule 20
	'|'            reduce using rule 20
	%eof           reduce using rule 20


State 14

	atype -> '(' . types ')'                            (rule 17)
	atype -> '(' . type ')'                             (rule 19)

	VARID          shift, and enter state 12
	CONID          shift, and enter state 13
	'('            shift, and enter state 14
	'['            shift, and enter state 15

	btype          goto state 7
	btype1         goto state 8
	atype          goto state 9
	gtycon         goto state 10
	types          goto state 18
	type           goto state 19

State 15

	atype -> '[' . type ']'                             (rule 18)

	VARID          shift, and enter state 12
	CONID          shift, and enter state 13
	'('            shift, and enter state 14
	'['            shift, and enter state 15

	btype          goto state 7
	btype1         goto state 8
	atype          goto state 9
	gtycon         goto state 10
	type           goto state 17

State 16

	%start_parser -> program .                          (rule 0)

	%eof           accept


State 17

	atype -> '[' type . ']'                             (rule 18)

	']'            shift, and enter state 40


State 18

	atype -> '(' types . ')'                            (rule 17)
	types -> types . ',' type                           (rule 21)

	')'            shift, and enter state 38
	','            shift, and enter state 39


State 19

	atype -> '(' type . ')'                             (rule 19)
	types -> type . ',' type                            (rule 22)

	')'            shift, and enter state 36
	','            shift, and enter state 37


State 20

	btype1 -> btype1 atype .                            (rule 13)

	'='            reduce using rule 13
	VARID          reduce using rule 13
	CONID          reduce using rule 13
	'('            reduce using rule 13
	')'            reduce using rule 13
	'['            reduce using rule 13
	']'            reduce using rule 13
	'}'            reduce using rule 13
	'in'           reduce using rule 13
	'data'         reduce using rule 13
	'sig'          reduce using rule 13
	'fun'          reduce using rule 13
	','            reduce using rule 13
	'->'           reduce using rule 13
	'|'            reduce using rule 13
	%eof           reduce using rule 13


State 21

	type -> btype '->' . type                           (rule 23)

	VARID          shift, and enter state 12
	CONID          shift, and enter state 13
	'('            shift, and enter state 14
	'['            shift, and enter state 15

	btype          goto state 7
	btype1         goto state 8
	atype          goto state 9
	gtycon         goto state 10
	type           goto state 35

State 22

	decls -> 'fun' funDecl . decls                      (rule 5)

	'in'           reduce using rule 3
	'data'         shift, and enter state 4
	'sig'          shift, and enter state 5
	'fun'          shift, and enter state 6
	%eof           reduce using rule 3

	decls          goto state 34

State 23

	funDecl -> VARID . vars '=' exp                     (rule 25)

	VARID          shift, and enter state 33

	vars           goto state 32

State 24

	decls -> 'sig' sigDecl . decls                      (rule 6)

	'in'           reduce using rule 3
	'data'         shift, and enter state 4
	'sig'          shift, and enter state 5
	'fun'          shift, and enter state 6
	%eof           reduce using rule 3

	decls          goto state 31

State 25

	sigDecl -> VARID . '::' type                        (rule 7)

	'::'           shift, and enter state 30


State 26

	decls -> 'data' dataDecl . decls                    (rule 4)

	'in'           reduce using rule 3
	'data'         shift, and enter state 4
	'sig'          shift, and enter state 5
	'fun'          shift, and enter state 6
	%eof           reduce using rule 3

	decls          goto state 29

State 27

	dataDecl -> type . '=' constrs                      (rule 8)

	'='            shift, and enter state 28


State 28

	dataDecl -> type '=' . constrs                      (rule 8)

	VARID          shift, and enter state 12
	CONID          shift, and enter state 13
	'('            shift, and enter state 14
	'['            shift, and enter state 15

	constrs        goto state 46
	constr         goto state 47
	btype          goto state 48
	btype1         goto state 8
	atype          goto state 9
	gtycon         goto state 10

State 29

	decls -> 'data' dataDecl decls .                    (rule 4)

	'in'           reduce using rule 4
	%eof           reduce using rule 4


State 30

	sigDecl -> VARID '::' . type                        (rule 7)

	VARID          shift, and enter state 12
	CONID          shift, and enter state 13
	'('            shift, and enter state 14
	'['            shift, and enter state 15

	btype          goto state 7
	btype1         goto state 8
	atype          goto state 9
	gtycon         goto state 10
	type           goto state 45

State 31

	decls -> 'sig' sigDecl decls .                      (rule 6)

	'in'           reduce using rule 6
	%eof           reduce using rule 6


State 32

	funDecl -> VARID vars . '=' exp                     (rule 25)

	'='            shift, and enter state 44


State 33

	vars -> VARID .                                     (rule 26)
	vars -> VARID . vars                                (rule 27)

	'='            reduce using rule 26
	VARID          shift, and enter state 33

	vars           goto state 43

State 34

	decls -> 'fun' funDecl decls .                      (rule 5)

	'in'           reduce using rule 5
	%eof           reduce using rule 5


State 35

	type -> btype '->' type .                           (rule 23)

	'='            reduce using rule 23
	')'            reduce using rule 23
	']'            reduce using rule 23
	'in'           reduce using rule 23
	'data'         reduce using rule 23
	'sig'          reduce using rule 23
	'fun'          reduce using rule 23
	','            reduce using rule 23
	%eof           reduce using rule 23


State 36

	atype -> '(' type ')' .                             (rule 19)

	'='            reduce using rule 19
	VARID          reduce using rule 19
	CONID          reduce using rule 19
	'('            reduce using rule 19
	')'            reduce using rule 19
	'['            reduce using rule 19
	']'            reduce using rule 19
	'}'            reduce using rule 19
	'in'           reduce using rule 19
	'data'         reduce using rule 19
	'sig'          reduce using rule 19
	'fun'          reduce using rule 19
	','            reduce using rule 19
	'->'           reduce using rule 19
	'|'            reduce using rule 19
	%eof           reduce using rule 19


State 37

	types -> type ',' . type                            (rule 22)

	VARID          shift, and enter state 12
	CONID          shift, and enter state 13
	'('            shift, and enter state 14
	'['            shift, and enter state 15

	btype          goto state 7
	btype1         goto state 8
	atype          goto state 9
	gtycon         goto state 10
	type           goto state 42

State 38

	atype -> '(' types ')' .                            (rule 17)

	'='            reduce using rule 17
	VARID          reduce using rule 17
	CONID          reduce using rule 17
	'('            reduce using rule 17
	')'            reduce using rule 17
	'['            reduce using rule 17
	']'            reduce using rule 17
	'}'            reduce using rule 17
	'in'           reduce using rule 17
	'data'         reduce using rule 17
	'sig'          reduce using rule 17
	'fun'          reduce using rule 17
	','            reduce using rule 17
	'->'           reduce using rule 17
	'|'            reduce using rule 17
	%eof           reduce using rule 17


State 39

	types -> types ',' . type                           (rule 21)

	VARID          shift, and enter state 12
	CONID          shift, and enter state 13
	'('            shift, and enter state 14
	'['            shift, and enter state 15

	btype          goto state 7
	btype1         goto state 8
	atype          goto state 9
	gtycon         goto state 10
	type           goto state 41

State 40

	atype -> '[' type ']' .                             (rule 18)

	'='            reduce using rule 18
	VARID          reduce using rule 18
	CONID          reduce using rule 18
	'('            reduce using rule 18
	')'            reduce using rule 18
	'['            reduce using rule 18
	']'            reduce using rule 18
	'}'            reduce using rule 18
	'in'           reduce using rule 18
	'data'         reduce using rule 18
	'sig'          reduce using rule 18
	'fun'          reduce using rule 18
	','            reduce using rule 18
	'->'           reduce using rule 18
	'|'            reduce using rule 18
	%eof           reduce using rule 18


State 41

	types -> types ',' type .                           (rule 21)

	')'            reduce using rule 21
	','            reduce using rule 21


State 42

	types -> type ',' type .                            (rule 22)

	')'            reduce using rule 22
	','            reduce using rule 22


State 43

	vars -> VARID vars .                                (rule 27)

	'='            reduce using rule 27


State 44

	funDecl -> VARID vars '=' . exp                     (rule 25)

	INT            shift, and enter state 52
	VARID          shift, and enter state 53
	CONID          shift, and enter state 54
	'()'           shift, and enter state 55
	'('            shift, and enter state 56
	'['            shift, and enter state 57
	'case'         shift, and enter state 58
	'let'          shift, and enter state 59
	'let\''        shift, and enter state 60
	'if'           shift, and enter state 61
	'trace'        shift, and enter state 62
	'fix'          shift, and enter state 63
	'fresh'        shift, and enter state 64
	'collect'      shift, and enter state 65
	'not'          shift, and enter state 66
	'+'            shift, and enter state 67
	'-'            shift, and enter state 68

	sexp           goto state 50
	exp            goto state 51

State 45

	sigDecl -> VARID '::' type .                        (rule 7)

	'in'           reduce using rule 7
	'data'         reduce using rule 7
	'sig'          reduce using rule 7
	'fun'          reduce using rule 7
	%eof           reduce using rule 7


State 46

	dataDecl -> type '=' constrs .                      (rule 8)
	constrs -> constrs . '|' constr                     (rule 10)

	'in'           reduce using rule 8
	'data'         reduce using rule 8
	'sig'          reduce using rule 8
	'fun'          reduce using rule 8
	'|'            shift, and enter state 49
	%eof           reduce using rule 8


State 47

	constrs -> constr .                                 (rule 9)

	'in'           reduce using rule 9
	'data'         reduce using rule 9
	'sig'          reduce using rule 9
	'fun'          reduce using rule 9
	'|'            reduce using rule 9
	%eof           reduce using rule 9


State 48

	constr -> btype .                                   (rule 11)

	'in'           reduce using rule 11
	'data'         reduce using rule 11
	'sig'          reduce using rule 11
	'fun'          reduce using rule 11
	'|'            reduce using rule 11
	%eof           reduce using rule 11


State 49

	constrs -> constrs '|' . constr                     (rule 10)

	VARID          shift, and enter state 12
	CONID          shift, and enter state 13
	'('            shift, and enter state 14
	'['            shift, and enter state 15

	constr         goto state 110
	btype          goto state 48
	btype1         goto state 8
	atype          goto state 9
	gtycon         goto state 10

State 50

	exp -> sexp .                                       (rule 35)
	exp -> sexp . sexps                                 (rule 36)

	INT            shift, and enter state 52
	VARID          shift, and enter state 53
	CONID          shift, and enter state 54
	'()'           shift, and enter state 55
	'('            shift, and enter state 56
	')'            reduce using rule 35
	'['            shift, and enter state 57
	']'            reduce using rule 35
	'{'            reduce using rule 35
	'}'            reduce using rule 35
	'!'            reduce using rule 35
	'of'           reduce using rule 35
	'end'          reduce using rule 35
	'in'           reduce using rule 35
	'then'         reduce using rule 35
	'else'         reduce using rule 35
	'data'         reduce using rule 35
	'sig'          reduce using rule 35
	'fun'          reduce using rule 35
	':'            reduce using rule 35
	','            reduce using rule 35
	'+'            reduce using rule 35
	'-'            reduce using rule 35
	'*'            reduce using rule 35
	'/'            reduce using rule 35
	'&&'           reduce using rule 35
	'||'           reduce using rule 35
	'=='           reduce using rule 35
	'/='           reduce using rule 35
	'<'            reduce using rule 35
	'>'            reduce using rule 35
	'<='           reduce using rule 35
	'>='           reduce using rule 35
	'|'            reduce using rule 35
	%eof           reduce using rule 35

	sexp           goto state 108
	sexps          goto state 109

State 51

	funDecl -> VARID vars '=' exp .                     (rule 25)
	exp -> exp . '+' exp                                (rule 40)
	exp -> exp . '-' exp                                (rule 41)
	exp -> exp . '*' exp                                (rule 42)
	exp -> exp . '/' exp                                (rule 43)
	exp -> exp . '&&' exp                               (rule 44)
	exp -> exp . '{' exp '}' '||' '{' exp '}' exp       (rule 45)
	exp -> exp . '||' exp                               (rule 46)
	exp -> exp . '==' exp                               (rule 47)
	exp -> exp . '/=' exp                               (rule 48)
	exp -> exp . '<' exp                                (rule 49)
	exp -> exp . '>' exp                                (rule 50)
	exp -> exp . '<=' exp                               (rule 51)
	exp -> exp . '>=' exp                               (rule 52)
	exp -> exp . ':' exp                                (rule 53)
	exp -> exp . '!' VARID                              (rule 60)

	'{'            shift, and enter state 93
	'!'            shift, and enter state 94
	'in'           reduce using rule 25
	'data'         reduce using rule 25
	'sig'          reduce using rule 25
	'fun'          reduce using rule 25
	':'            shift, and enter state 95
	'+'            shift, and enter state 96
	'-'            shift, and enter state 97
	'*'            shift, and enter state 98
	'/'            shift, and enter state 99
	'&&'           shift, and enter state 100
	'||'           shift, and enter state 101
	'=='           shift, and enter state 102
	'/='           shift, and enter state 103
	'<'            shift, and enter state 104
	'>'            shift, and enter state 105
	'<='           shift, and enter state 106
	'>='           shift, and enter state 107
	%eof           reduce using rule 25


State 52

	sexp -> INT .                                       (rule 28)

	INT            reduce using rule 28
	VARID          reduce using rule 28
	CONID          reduce using rule 28
	'()'           reduce using rule 28
	'('            reduce using rule 28
	')'            reduce using rule 28
	'['            reduce using rule 28
	']'            reduce using rule 28
	'{'            reduce using rule 28
	'}'            reduce using rule 28
	'!'            reduce using rule 28
	'of'           reduce using rule 28
	'end'          reduce using rule 28
	'in'           reduce using rule 28
	'then'         reduce using rule 28
	'else'         reduce using rule 28
	'data'         reduce using rule 28
	'sig'          reduce using rule 28
	'fun'          reduce using rule 28
	':'            reduce using rule 28
	','            reduce using rule 28
	'+'            reduce using rule 28
	'-'            reduce using rule 28
	'*'            reduce using rule 28
	'/'            reduce using rule 28
	'&&'           reduce using rule 28
	'||'           reduce using rule 28
	'=='           reduce using rule 28
	'/='           reduce using rule 28
	'<'            reduce using rule 28
	'>'            reduce using rule 28
	'<='           reduce using rule 28
	'>='           reduce using rule 28
	'|'            reduce using rule 28
	%eof           reduce using rule 28


State 53

	sexp -> VARID .                                     (rule 30)

	INT            reduce using rule 30
	VARID          reduce using rule 30
	CONID          reduce using rule 30
	'()'           reduce using rule 30
	'('            reduce using rule 30
	')'            reduce using rule 30
	'['            reduce using rule 30
	']'            reduce using rule 30
	'{'            reduce using rule 30
	'}'            reduce using rule 30
	'!'            reduce using rule 30
	'of'           reduce using rule 30
	'end'          reduce using rule 30
	'in'           reduce using rule 30
	'then'         reduce using rule 30
	'else'         reduce using rule 30
	'data'         reduce using rule 30
	'sig'          reduce using rule 30
	'fun'          reduce using rule 30
	':'            reduce using rule 30
	','            reduce using rule 30
	'+'            reduce using rule 30
	'-'            reduce using rule 30
	'*'            reduce using rule 30
	'/'            reduce using rule 30
	'&&'           reduce using rule 30
	'||'           reduce using rule 30
	'=='           reduce using rule 30
	'/='           reduce using rule 30
	'<'            reduce using rule 30
	'>'            reduce using rule 30
	'<='           reduce using rule 30
	'>='           reduce using rule 30
	'|'            reduce using rule 30
	%eof           reduce using rule 30


State 54

	sexp -> CONID .                                     (rule 29)

	INT            reduce using rule 29
	VARID          reduce using rule 29
	CONID          reduce using rule 29
	'()'           reduce using rule 29
	'('            reduce using rule 29
	')'            reduce using rule 29
	'['            reduce using rule 29
	']'            reduce using rule 29
	'{'            reduce using rule 29
	'}'            reduce using rule 29
	'!'            reduce using rule 29
	'of'           reduce using rule 29
	'end'          reduce using rule 29
	'in'           reduce using rule 29
	'then'         reduce using rule 29
	'else'         reduce using rule 29
	'data'         reduce using rule 29
	'sig'          reduce using rule 29
	'fun'          reduce using rule 29
	':'            reduce using rule 29
	','            reduce using rule 29
	'+'            reduce using rule 29
	'-'            reduce using rule 29
	'*'            reduce using rule 29
	'/'            reduce using rule 29
	'&&'           reduce using rule 29
	'||'           reduce using rule 29
	'=='           reduce using rule 29
	'/='           reduce using rule 29
	'<'            reduce using rule 29
	'>'            reduce using rule 29
	'<='           reduce using rule 29
	'>='           reduce using rule 29
	'|'            reduce using rule 29
	%eof           reduce using rule 29


State 55

	sexp -> '()' .                                      (rule 31)

	INT            reduce using rule 31
	VARID          reduce using rule 31
	CONID          reduce using rule 31
	'()'           reduce using rule 31
	'('            reduce using rule 31
	')'            reduce using rule 31
	'['            reduce using rule 31
	']'            reduce using rule 31
	'{'            reduce using rule 31
	'}'            reduce using rule 31
	'!'            reduce using rule 31
	'of'           reduce using rule 31
	'end'          reduce using rule 31
	'in'           reduce using rule 31
	'then'         reduce using rule 31
	'else'         reduce using rule 31
	'data'         reduce using rule 31
	'sig'          reduce using rule 31
	'fun'          reduce using rule 31
	':'            reduce using rule 31
	','            reduce using rule 31
	'+'            reduce using rule 31
	'-'            reduce using rule 31
	'*'            reduce using rule 31
	'/'            reduce using rule 31
	'&&'           reduce using rule 31
	'||'           reduce using rule 31
	'=='           reduce using rule 31
	'/='           reduce using rule 31
	'<'            reduce using rule 31
	'>'            reduce using rule 31
	'<='           reduce using rule 31
	'>='           reduce using rule 31
	'|'            reduce using rule 31
	%eof           reduce using rule 31


State 56

	sexp -> '(' . exp ')'                               (rule 32)
	sexp -> '(' . ccexps ')'                            (rule 33)

	INT            shift, and enter state 52
	VARID          shift, and enter state 53
	CONID          shift, and enter state 54
	'()'           shift, and enter state 55
	'('            shift, and enter state 56
	'['            shift, and enter state 57
	'case'         shift, and enter state 58
	'let'          shift, and enter state 59
	'let\''        shift, and enter state 60
	'if'           shift, and enter state 61
	'trace'        shift, and enter state 62
	'fix'          shift, and enter state 63
	'fresh'        shift, and enter state 64
	'collect'      shift, and enter state 65
	'not'          shift, and enter state 66
	'+'            shift, and enter state 67
	'-'            shift, and enter state 68

	sexp           goto state 50
	exp            goto state 91
	ccexps         goto state 92

State 57

	sexp -> '[' . exps ']'                              (rule 34)

	INT            shift, and enter state 52
	VARID          shift, and enter state 53
	CONID          shift, and enter state 54
	'()'           shift, and enter state 55
	'('            shift, and enter state 56
	'['            shift, and enter state 57
	']'            reduce using rule 65
	'case'         shift, and enter state 58
	'let'          shift, and enter state 59
	'let\''        shift, and enter state 60
	'if'           shift, and enter state 61
	'trace'        shift, and enter state 62
	'fix'          shift, and enter state 63
	'fresh'        shift, and enter state 64
	'collect'      shift, and enter state 65
	'not'          shift, and enter state 66
	'+'            shift, and enter state 67
	'-'            shift, and enter state 68

	sexp           goto state 50
	exp            goto state 87
	exps           goto state 88
	cexps          goto state 89
	ccexps         goto state 90

State 58

	exp -> 'case' . exp 'of' branches 'end'             (rule 54)

	INT            shift, and enter state 52
	VARID          shift, and enter state 53
	CONID          shift, and enter state 54
	'()'           shift, and enter state 55
	'('            shift, and enter state 56
	'['            shift, and enter state 57
	'case'         shift, and enter state 58
	'let'          shift, and enter state 59
	'let\''        shift, and enter state 60
	'if'           shift, and enter state 61
	'trace'        shift, and enter state 62
	'fix'          shift, and enter state 63
	'fresh'        shift, and enter state 64
	'collect'      shift, and enter state 65
	'not'          shift, and enter state 66
	'+'            shift, and enter state 67
	'-'            shift, and enter state 68

	sexp           goto state 50
	exp            goto state 86

State 59

	exp -> 'let' . decls 'in' exp                       (rule 55)

	'in'           reduce using rule 3
	'data'         shift, and enter state 4
	'sig'          shift, and enter state 5
	'fun'          shift, and enter state 6

	decls          goto state 85

State 60

	exp -> 'let\'' . pat '=' exp 'in' exp               (rule 56)

	VARID          shift, and enter state 79
	CONID          shift, and enter state 80
	'()'           shift, and enter state 81
	'('            shift, and enter state 82
	'['            shift, and enter state 83
	'_'            shift, and enter state 84

	pat            goto state 77
	ppat           goto state 78

State 61

	exp -> 'if' . exp 'then' exp 'else' exp             (rule 57)

	INT            shift, and enter state 52
	VARID          shift, and enter state 53
	CONID          shift, and enter state 54
	'()'           shift, and enter state 55
	'('            shift, and enter state 56
	'['            shift, and enter state 57
	'case'         shift, and enter state 58
	'let'          shift, and enter state 59
	'let\''        shift, and enter state 60
	'if'           shift, and enter state 61
	'trace'        shift, and enter state 62
	'fix'          shift, and enter state 63
	'fresh'        shift, and enter state 64
	'collect'      shift, and enter state 65
	'not'          shift, and enter state 66
	'+'            shift, and enter state 67
	'-'            shift, and enter state 68

	sexp           goto state 50
	exp            goto state 76

State 62

	exp -> 'trace' . VARID '(' exp ')'                  (rule 61)

	VARID          shift, and enter state 75


State 63

	exp -> 'fix' . '{' exp '}'                          (rule 58)

	'{'            shift, and enter state 74


State 64

	exp -> 'fresh' . '{' VARID ':' btype '}' 'in' exp    (rule 59)

	'{'            shift, and enter state 73


State 65

	exp -> 'collect' . '{' exp '}' exp                  (rule 62)

	'{'            shift, and enter state 72


State 66

	exp -> 'not' . exp                                  (rule 39)

	INT            shift, and enter state 52
	VARID          shift, and enter state 53
	CONID          shift, and enter state 54
	'()'           shift, and enter state 55
	'('            shift, and enter state 56
	'['            shift, and enter state 57
	'case'         shift, and enter state 58
	'let'          shift, and enter state 59
	'let\''        shift, and enter state 60
	'if'           shift, and enter state 61
	'trace'        shift, and enter state 62
	'fix'          shift, and enter state 63
	'fresh'        shift, and enter state 64
	'collect'      shift, and enter state 65
	'not'          shift, and enter state 66
	'+'            shift, and enter state 67
	'-'            shift, and enter state 68

	sexp           goto state 50
	exp            goto state 71

State 67

	exp -> '+' . exp                                    (rule 37)

	INT            shift, and enter state 52
	VARID          shift, and enter state 53
	CONID          shift, and enter state 54
	'()'           shift, and enter state 55
	'('            shift, and enter state 56
	'['            shift, and enter state 57
	'case'         shift, and enter state 58
	'let'          shift, and enter state 59
	'let\''        shift, and enter state 60
	'if'           shift, and enter state 61
	'trace'        shift, and enter state 62
	'fix'          shift, and enter state 63
	'fresh'        shift, and enter state 64
	'collect'      shift, and enter state 65
	'not'          shift, and enter state 66
	'+'            shift, and enter state 67
	'-'            shift, and enter state 68

	sexp           goto state 50
	exp            goto state 70

State 68

	exp -> '-' . exp                                    (rule 38)

	INT            shift, and enter state 52
	VARID          shift, and enter state 53
	CONID          shift, and enter state 54
	'()'           shift, and enter state 55
	'('            shift, and enter state 56
	'['            shift, and enter state 57
	'case'         shift, and enter state 58
	'let'          shift, and enter state 59
	'let\''        shift, and enter state 60
	'if'           shift, and enter state 61
	'trace'        shift, and enter state 62
	'fix'          shift, and enter state 63
	'fresh'        shift, and enter state 64
	'collect'      shift, and enter state 65
	'not'          shift, and enter state 66
	'+'            shift, and enter state 67
	'-'            shift, and enter state 68

	sexp           goto state 50
	exp            goto state 69

State 69

	exp -> '-' exp .                                    (rule 38)
	exp -> exp . '+' exp                                (rule 40)
	exp -> exp . '-' exp                                (rule 41)
	exp -> exp . '*' exp                                (rule 42)
	exp -> exp . '/' exp                                (rule 43)
	exp -> exp . '&&' exp                               (rule 44)
	exp -> exp . '{' exp '}' '||' '{' exp '}' exp       (rule 45)
	exp -> exp . '||' exp                               (rule 46)
	exp -> exp . '==' exp                               (rule 47)
	exp -> exp . '/=' exp                               (rule 48)
	exp -> exp . '<' exp                                (rule 49)
	exp -> exp . '>' exp                                (rule 50)
	exp -> exp . '<=' exp                               (rule 51)
	exp -> exp . '>=' exp                               (rule 52)
	exp -> exp . ':' exp                                (rule 53)
	exp -> exp . '!' VARID                              (rule 60)

	')'            reduce using rule 38
	']'            reduce using rule 38
	'{'            reduce using rule 38
	'}'            reduce using rule 38
	'!'            reduce using rule 38
	'of'           reduce using rule 38
	'end'          reduce using rule 38
	'in'           reduce using rule 38
	'then'         reduce using rule 38
	'else'         reduce using rule 38
	'data'         reduce using rule 38
	'sig'          reduce using rule 38
	'fun'          reduce using rule 38
	':'            reduce using rule 38
	','            reduce using rule 38
	'+'            reduce using rule 38
	'-'            reduce using rule 38
	'*'            reduce using rule 38
	'/'            reduce using rule 38
	'&&'           reduce using rule 38
	'||'           reduce using rule 38
	'=='           reduce using rule 38
	'/='           reduce using rule 38
	'<'            reduce using rule 38
	'>'            reduce using rule 38
	'<='           reduce using rule 38
	'>='           reduce using rule 38
	'|'            reduce using rule 38
	%eof           reduce using rule 38


State 70

	exp -> '+' exp .                                    (rule 37)
	exp -> exp . '+' exp                                (rule 40)
	exp -> exp . '-' exp                                (rule 41)
	exp -> exp . '*' exp                                (rule 42)
	exp -> exp . '/' exp                                (rule 43)
	exp -> exp . '&&' exp                               (rule 44)
	exp -> exp . '{' exp '}' '||' '{' exp '}' exp       (rule 45)
	exp -> exp . '||' exp                               (rule 46)
	exp -> exp . '==' exp                               (rule 47)
	exp -> exp . '/=' exp                               (rule 48)
	exp -> exp . '<' exp                                (rule 49)
	exp -> exp . '>' exp                                (rule 50)
	exp -> exp . '<=' exp                               (rule 51)
	exp -> exp . '>=' exp                               (rule 52)
	exp -> exp . ':' exp                                (rule 53)
	exp -> exp . '!' VARID                              (rule 60)

	')'            reduce using rule 37
	']'            reduce using rule 37
	'{'            reduce using rule 37
	'}'            reduce using rule 37
	'!'            reduce using rule 37
	'of'           reduce using rule 37
	'end'          reduce using rule 37
	'in'           reduce using rule 37
	'then'         reduce using rule 37
	'else'         reduce using rule 37
	'data'         reduce using rule 37
	'sig'          reduce using rule 37
	'fun'          reduce using rule 37
	':'            reduce using rule 37
	','            reduce using rule 37
	'+'            reduce using rule 37
	'-'            reduce using rule 37
	'*'            reduce using rule 37
	'/'            reduce using rule 37
	'&&'           reduce using rule 37
	'||'           reduce using rule 37
	'=='           reduce using rule 37
	'/='           reduce using rule 37
	'<'            reduce using rule 37
	'>'            reduce using rule 37
	'<='           reduce using rule 37
	'>='           reduce using rule 37
	'|'            reduce using rule 37
	%eof           reduce using rule 37


State 71

	exp -> 'not' exp .                                  (rule 39)
	exp -> exp . '+' exp                                (rule 40)
	exp -> exp . '-' exp                                (rule 41)
	exp -> exp . '*' exp                                (rule 42)
	exp -> exp . '/' exp                                (rule 43)
	exp -> exp . '&&' exp                               (rule 44)
	exp -> exp . '{' exp '}' '||' '{' exp '}' exp       (rule 45)
	exp -> exp . '||' exp                               (rule 46)
	exp -> exp . '==' exp                               (rule 47)
	exp -> exp . '/=' exp                               (rule 48)
	exp -> exp . '<' exp                                (rule 49)
	exp -> exp . '>' exp                                (rule 50)
	exp -> exp . '<=' exp                               (rule 51)
	exp -> exp . '>=' exp                               (rule 52)
	exp -> exp . ':' exp                                (rule 53)
	exp -> exp . '!' VARID                              (rule 60)

	')'            reduce using rule 39
	']'            reduce using rule 39
	'{'            reduce using rule 39
	'}'            reduce using rule 39
	'!'            reduce using rule 39
	'of'           reduce using rule 39
	'end'          reduce using rule 39
	'in'           reduce using rule 39
	'then'         reduce using rule 39
	'else'         reduce using rule 39
	'data'         reduce using rule 39
	'sig'          reduce using rule 39
	'fun'          reduce using rule 39
	':'            reduce using rule 39
	','            reduce using rule 39
	'+'            reduce using rule 39
	'-'            reduce using rule 39
	'*'            reduce using rule 39
	'/'            reduce using rule 39
	'&&'           reduce using rule 39
	'||'           reduce using rule 39
	'=='           reduce using rule 39
	'/='           reduce using rule 39
	'<'            reduce using rule 39
	'>'            reduce using rule 39
	'<='           reduce using rule 39
	'>='           reduce using rule 39
	'|'            reduce using rule 39
	%eof           reduce using rule 39


State 72

	exp -> 'collect' '{' . exp '}' exp                  (rule 62)

	INT            shift, and enter state 52
	VARID          shift, and enter state 53
	CONID          shift, and enter state 54
	'()'           shift, and enter state 55
	'('            shift, and enter state 56
	'['            shift, and enter state 57
	'case'         shift, and enter state 58
	'let'          shift, and enter state 59
	'let\''        shift, and enter state 60
	'if'           shift, and enter state 61
	'trace'        shift, and enter state 62
	'fix'          shift, and enter state 63
	'fresh'        shift, and enter state 64
	'collect'      shift, and enter state 65
	'not'          shift, and enter state 66
	'+'            shift, and enter state 67
	'-'            shift, and enter state 68

	sexp           goto state 50
	exp            goto state 148

State 73

	exp -> 'fresh' '{' . VARID ':' btype '}' 'in' exp    (rule 59)

	VARID          shift, and enter state 147


State 74

	exp -> 'fix' '{' . exp '}'                          (rule 58)

	INT            shift, and enter state 52
	VARID          shift, and enter state 53
	CONID          shift, and enter state 54
	'()'           shift, and enter state 55
	'('            shift, and enter state 56
	'['            shift, and enter state 57
	'case'         shift, and enter state 58
	'let'          shift, and enter state 59
	'let\''        shift, and enter state 60
	'if'           shift, and enter state 61
	'trace'        shift, and enter state 62
	'fix'          shift, and enter state 63
	'fresh'        shift, and enter state 64
	'collect'      shift, and enter state 65
	'not'          shift, and enter state 66
	'+'            shift, and enter state 67
	'-'            shift, and enter state 68

	sexp           goto state 50
	exp            goto state 146

State 75

	exp -> 'trace' VARID . '(' exp ')'                  (rule 61)

	'('            shift, and enter state 145


State 76

	exp -> exp . '+' exp                                (rule 40)
	exp -> exp . '-' exp                                (rule 41)
	exp -> exp . '*' exp                                (rule 42)
	exp -> exp . '/' exp                                (rule 43)
	exp -> exp . '&&' exp                               (rule 44)
	exp -> exp . '{' exp '}' '||' '{' exp '}' exp       (rule 45)
	exp -> exp . '||' exp                               (rule 46)
	exp -> exp . '==' exp                               (rule 47)
	exp -> exp . '/=' exp                               (rule 48)
	exp -> exp . '<' exp                                (rule 49)
	exp -> exp . '>' exp                                (rule 50)
	exp -> exp . '<=' exp                               (rule 51)
	exp -> exp . '>=' exp                               (rule 52)
	exp -> exp . ':' exp                                (rule 53)
	exp -> 'if' exp . 'then' exp 'else' exp             (rule 57)
	exp -> exp . '!' VARID                              (rule 60)

	'{'            shift, and enter state 93
	'!'            shift, and enter state 94
	'then'         shift, and enter state 144
	':'            shift, and enter state 95
	'+'            shift, and enter state 96
	'-'            shift, and enter state 97
	'*'            shift, and enter state 98
	'/'            shift, and enter state 99
	'&&'           shift, and enter state 100
	'||'           shift, and enter state 101
	'=='           shift, and enter state 102
	'/='           shift, and enter state 103
	'<'            shift, and enter state 104
	'>'            shift, and enter state 105
	'<='           shift, and enter state 106
	'>='           shift, and enter state 107


State 77

	exp -> 'let\'' pat . '=' exp 'in' exp               (rule 56)
	pat -> pat . ':' pat                                (rule 77)

	'='            shift, and enter state 142
	':'            shift, and enter state 143


State 78

	pat -> ppat .                                       (rule 75)

	'='            reduce using rule 75
	')'            reduce using rule 75
	']'            reduce using rule 75
	':'            reduce using rule 75
	','            reduce using rule 75
	'->'           reduce using rule 75


State 79

	ppat -> VARID .                                     (rule 79)

	'='            reduce using rule 79
	VARID          reduce using rule 79
	CONID          reduce using rule 79
	'()'           reduce using rule 79
	'('            reduce using rule 79
	')'            reduce using rule 79
	'['            reduce using rule 79
	']'            reduce using rule 79
	'_'            reduce using rule 79
	':'            reduce using rule 79
	','            reduce using rule 79
	'->'           reduce using rule 79


State 80

	pat -> CONID . ppats                                (rule 76)
	ppat -> CONID .                                     (rule 80)

	'='            reduce using rule 80
	VARID          shift, and enter state 79
	CONID          shift, and enter state 141
	'()'           shift, and enter state 81
	'('            shift, and enter state 82
	')'            reduce using rule 80
	'['            shift, and enter state 83
	']'            reduce using rule 80
	'_'            shift, and enter state 84
	':'            reduce using rule 80
	','            reduce using rule 80
	'->'           reduce using rule 80

	ppat           goto state 139
	ppats          goto state 140

State 81

	ppat -> '()' .                                      (rule 81)

	'='            reduce using rule 81
	VARID          reduce using rule 81
	CONID          reduce using rule 81
	'()'           reduce using rule 81
	'('            reduce using rule 81
	')'            reduce using rule 81
	'['            reduce using rule 81
	']'            reduce using rule 81
	'_'            reduce using rule 81
	':'            reduce using rule 81
	','            reduce using rule 81
	'->'           reduce using rule 81


State 82

	ppat -> '(' . pat ')'                               (rule 82)
	ppat -> '(' . ccpats ')'                            (rule 83)

	VARID          shift, and enter state 79
	CONID          shift, and enter state 80
	'()'           shift, and enter state 81
	'('            shift, and enter state 82
	'['            shift, and enter state 83
	'_'            shift, and enter state 84

	pat            goto state 137
	ppat           goto state 78
	ccpats         goto state 138

State 83

	ppat -> '[' . ']'                                   (rule 84)
	ppat -> '[' . cpats ']'                             (rule 85)

	VARID          shift, and enter state 79
	CONID          shift, and enter state 80
	'()'           shift, and enter state 81
	'('            shift, and enter state 82
	'['            shift, and enter state 83
	']'            shift, and enter state 136
	'_'            shift, and enter state 84

	pat            goto state 133
	ppat           goto state 78
	cpats          goto state 134
	ccpats         goto state 135

State 84

	ppat -> '_' .                                       (rule 78)

	'='            reduce using rule 78
	VARID          reduce using rule 78
	CONID          reduce using rule 78
	'()'           reduce using rule 78
	'('            reduce using rule 78
	')'            reduce using rule 78
	'['            reduce using rule 78
	']'            reduce using rule 78
	'_'            reduce using rule 78
	':'            reduce using rule 78
	','            reduce using rule 78
	'->'           reduce using rule 78


State 85

	exp -> 'let' decls . 'in' exp                       (rule 55)

	'in'           shift, and enter state 132


State 86

	exp -> exp . '+' exp                                (rule 40)
	exp -> exp . '-' exp                                (rule 41)
	exp -> exp . '*' exp                                (rule 42)
	exp -> exp . '/' exp                                (rule 43)
	exp -> exp . '&&' exp                               (rule 44)
	exp -> exp . '{' exp '}' '||' '{' exp '}' exp       (rule 45)
	exp -> exp . '||' exp                               (rule 46)
	exp -> exp . '==' exp                               (rule 47)
	exp -> exp . '/=' exp                               (rule 48)
	exp -> exp . '<' exp                                (rule 49)
	exp -> exp . '>' exp                                (rule 50)
	exp -> exp . '<=' exp                               (rule 51)
	exp -> exp . '>=' exp                               (rule 52)
	exp -> exp . ':' exp                                (rule 53)
	exp -> 'case' exp . 'of' branches 'end'             (rule 54)
	exp -> exp . '!' VARID                              (rule 60)

	'{'            shift, and enter state 93
	'!'            shift, and enter state 94
	'of'           shift, and enter state 131
	':'            shift, and enter state 95
	'+'            shift, and enter state 96
	'-'            shift, and enter state 97
	'*'            shift, and enter state 98
	'/'            shift, and enter state 99
	'&&'           shift, and enter state 100
	'||'           shift, and enter state 101
	'=='           shift, and enter state 102
	'/='           shift, and enter state 103
	'<'            shift, and enter state 104
	'>'            shift, and enter state 105
	'<='           shift, and enter state 106
	'>='           shift, and enter state 107


State 87

	exp -> exp . '+' exp                                (rule 40)
	exp -> exp . '-' exp                                (rule 41)
	exp -> exp . '*' exp                                (rule 42)
	exp -> exp . '/' exp                                (rule 43)
	exp -> exp . '&&' exp                               (rule 44)
	exp -> exp . '{' exp '}' '||' '{' exp '}' exp       (rule 45)
	exp -> exp . '||' exp                               (rule 46)
	exp -> exp . '==' exp                               (rule 47)
	exp -> exp . '/=' exp                               (rule 48)
	exp -> exp . '<' exp                                (rule 49)
	exp -> exp . '>' exp                                (rule 50)
	exp -> exp . '<=' exp                               (rule 51)
	exp -> exp . '>=' exp                               (rule 52)
	exp -> exp . ':' exp                                (rule 53)
	exp -> exp . '!' VARID                              (rule 60)
	cexps -> exp .                                      (rule 67)
	ccexps -> exp . ',' cexps                           (rule 69)

	')'            reduce using rule 67
	']'            reduce using rule 67
	'{'            shift, and enter state 93
	'!'            shift, and enter state 94
	':'            shift, and enter state 95
	','            shift, and enter state 129
	'+'            shift, and enter state 96
	'-'            shift, and enter state 97
	'*'            shift, and enter state 98
	'/'            shift, and enter state 99
	'&&'           shift, and enter state 100
	'||'           shift, and enter state 101
	'=='           shift, and enter state 102
	'/='           shift, and enter state 103
	'<'            shift, and enter state 104
	'>'            shift, and enter state 105
	'<='           shift, and enter state 106
	'>='           shift, and enter state 107


State 88

	sexp -> '[' exps . ']'                              (rule 34)

	']'            shift, and enter state 130


State 89

	exps -> cexps .                                     (rule 66)

	']'            reduce using rule 66


State 90

	cexps -> ccexps .                                   (rule 68)

	')'            reduce using rule 68
	']'            reduce using rule 68


State 91

	sexp -> '(' exp . ')'                               (rule 32)
	exp -> exp . '+' exp                                (rule 40)
	exp -> exp . '-' exp                                (rule 41)
	exp -> exp . '*' exp                                (rule 42)
	exp -> exp . '/' exp                                (rule 43)
	exp -> exp . '&&' exp                               (rule 44)
	exp -> exp . '{' exp '}' '||' '{' exp '}' exp       (rule 45)
	exp -> exp . '||' exp                               (rule 46)
	exp -> exp . '==' exp                               (rule 47)
	exp -> exp . '/=' exp                               (rule 48)
	exp -> exp . '<' exp                                (rule 49)
	exp -> exp . '>' exp                                (rule 50)
	exp -> exp . '<=' exp                               (rule 51)
	exp -> exp . '>=' exp                               (rule 52)
	exp -> exp . ':' exp                                (rule 53)
	exp -> exp . '!' VARID                              (rule 60)
	ccexps -> exp . ',' cexps                           (rule 69)

	')'            shift, and enter state 128
	'{'            shift, and enter state 93
	'!'            shift, and enter state 94
	':'            shift, and enter state 95
	','            shift, and enter state 129
	'+'            shift, and enter state 96
	'-'            shift, and enter state 97
	'*'            shift, and enter state 98
	'/'            shift, and enter state 99
	'&&'           shift, and enter state 100
	'||'           shift, and enter state 101
	'=='           shift, and enter state 102
	'/='           shift, and enter state 103
	'<'            shift, and enter state 104
	'>'            shift, and enter state 105
	'<='           shift, and enter state 106
	'>='           shift, and enter state 107


State 92

	sexp -> '(' ccexps . ')'                            (rule 33)

	')'            shift, and enter state 127


State 93

	exp -> exp '{' . exp '}' '||' '{' exp '}' exp       (rule 45)

	INT            shift, and enter state 52
	VARID          shift, and enter state 53
	CONID          shift, and enter state 54
	'()'           shift, and enter state 55
	'('            shift, and enter state 56
	'['            shift, and enter state 57
	'case'         shift, and enter state 58
	'let'          shift, and enter state 59
	'let\''        shift, and enter state 60
	'if'           shift, and enter state 61
	'trace'        shift, and enter state 62
	'fix'          shift, and enter state 63
	'fresh'        shift, and enter state 64
	'collect'      shift, and enter state 65
	'not'          shift, and enter state 66
	'+'            shift, and enter state 67
	'-'            shift, and enter state 68

	sexp           goto state 50
	exp            goto state 126

State 94

	exp -> exp '!' . VARID                              (rule 60)

	VARID          shift, and enter state 125


State 95

	exp -> exp ':' . exp                                (rule 53)

	INT            shift, and enter state 52
	VARID          shift, and enter state 53
	CONID          shift, and enter state 54
	'()'           shift, and enter state 55
	'('            shift, and enter state 56
	'['            shift, and enter state 57
	'case'         shift, and enter state 58
	'let'          shift, and enter state 59
	'let\''        shift, and enter state 60
	'if'           shift, and enter state 61
	'trace'        shift, and enter state 62
	'fix'          shift, and enter state 63
	'fresh'        shift, and enter state 64
	'collect'      shift, and enter state 65
	'not'          shift, and enter state 66
	'+'            shift, and enter state 67
	'-'            shift, and enter state 68

	sexp           goto state 50
	exp            goto state 124

State 96

	exp -> exp '+' . exp                                (rule 40)

	INT            shift, and enter state 52
	VARID          shift, and enter state 53
	CONID          shift, and enter state 54
	'()'           shift, and enter state 55
	'('            shift, and enter state 56
	'['            shift, and enter state 57
	'case'         shift, and enter state 58
	'let'          shift, and enter state 59
	'let\''        shift, and enter state 60
	'if'           shift, and enter state 61
	'trace'        shift, and enter state 62
	'fix'          shift, and enter state 63
	'fresh'        shift, and enter state 64
	'collect'      shift, and enter state 65
	'not'          shift, and enter state 66
	'+'            shift, and enter state 67
	'-'            shift, and enter state 68

	sexp           goto state 50
	exp            goto state 123

State 97

	exp -> exp '-' . exp                                (rule 41)

	INT            shift, and enter state 52
	VARID          shift, and enter state 53
	CONID          shift, and enter state 54
	'()'           shift, and enter state 55
	'('            shift, and enter state 56
	'['            shift, and enter state 57
	'case'         shift, and enter state 58
	'let'          shift, and enter state 59
	'let\''        shift, and enter state 60
	'if'           shift, and enter state 61
	'trace'        shift, and enter state 62
	'fix'          shift, and enter state 63
	'fresh'        shift, and enter state 64
	'collect'      shift, and enter state 65
	'not'          shift, and enter state 66
	'+'            shift, and enter state 67
	'-'            shift, and enter state 68

	sexp           goto state 50
	exp            goto state 122

State 98

	exp -> exp '*' . exp                                (rule 42)

	INT            shift, and enter state 52
	VARID          shift, and enter state 53
	CONID          shift, and enter state 54
	'()'           shift, and enter state 55
	'('            shift, and enter state 56
	'['            shift, and enter state 57
	'case'         shift, and enter state 58
	'let'          shift, and enter state 59
	'let\''        shift, and enter state 60
	'if'           shift, and enter state 61
	'trace'        shift, and enter state 62
	'fix'          shift, and enter state 63
	'fresh'        shift, and enter state 64
	'collect'      shift, and enter state 65
	'not'          shift, and enter state 66
	'+'            shift, and enter state 67
	'-'            shift, and enter state 68

	sexp           goto state 50
	exp            goto state 121

State 99

	exp -> exp '/' . exp                                (rule 43)

	INT            shift, and enter state 52
	VARID          shift, and enter state 53
	CONID          shift, and enter state 54
	'()'           shift, and enter state 55
	'('            shift, and enter state 56
	'['            shift, and enter state 57
	'case'         shift, and enter state 58
	'let'          shift, and enter state 59
	'let\''        shift, and enter state 60
	'if'           shift, and enter state 61
	'trace'        shift, and enter state 62
	'fix'          shift, and enter state 63
	'fresh'        shift, and enter state 64
	'collect'      shift, and enter state 65
	'not'          shift, and enter state 66
	'+'            shift, and enter state 67
	'-'            shift, and enter state 68

	sexp           goto state 50
	exp            goto state 120

State 100

	exp -> exp '&&' . exp                               (rule 44)

	INT            shift, and enter state 52
	VARID          shift, and enter state 53
	CONID          shift, and enter state 54
	'()'           shift, and enter state 55
	'('            shift, and enter state 56
	'['            shift, and enter state 57
	'case'         shift, and enter state 58
	'let'          shift, and enter state 59
	'let\''        shift, and enter state 60
	'if'           shift, and enter state 61
	'trace'        shift, and enter state 62
	'fix'          shift, and enter state 63
	'fresh'        shift, and enter state 64
	'collect'      shift, and enter state 65
	'not'          shift, and enter state 66
	'+'            shift, and enter state 67
	'-'            shift, and enter state 68

	sexp           goto state 50
	exp            goto state 119

State 101

	exp -> exp '||' . exp                               (rule 46)

	INT            shift, and enter state 52
	VARID          shift, and enter state 53
	CONID          shift, and enter state 54
	'()'           shift, and enter state 55
	'('            shift, and enter state 56
	'['            shift, and enter state 57
	'case'         shift, and enter state 58
	'let'          shift, and enter state 59
	'let\''        shift, and enter state 60
	'if'           shift, and enter state 61
	'trace'        shift, and enter state 62
	'fix'          shift, and enter state 63
	'fresh'        shift, and enter state 64
	'collect'      shift, and enter state 65
	'not'          shift, and enter state 66
	'+'            shift, and enter state 67
	'-'            shift, and enter state 68

	sexp           goto state 50
	exp            goto state 118

State 102

	exp -> exp '==' . exp                               (rule 47)

	INT            shift, and enter state 52
	VARID          shift, and enter state 53
	CONID          shift, and enter state 54
	'()'           shift, and enter state 55
	'('            shift, and enter state 56
	'['            shift, and enter state 57
	'case'         shift, and enter state 58
	'let'          shift, and enter state 59
	'let\''        shift, and enter state 60
	'if'           shift, and enter state 61
	'trace'        shift, and enter state 62
	'fix'          shift, and enter state 63
	'fresh'        shift, and enter state 64
	'collect'      shift, and enter state 65
	'not'          shift, and enter state 66
	'+'            shift, and enter state 67
	'-'            shift, and enter state 68

	sexp           goto state 50
	exp            goto state 117

State 103

	exp -> exp '/=' . exp                               (rule 48)

	INT            shift, and enter state 52
	VARID          shift, and enter state 53
	CONID          shift, and enter state 54
	'()'           shift, and enter state 55
	'('            shift, and enter state 56
	'['            shift, and enter state 57
	'case'         shift, and enter state 58
	'let'          shift, and enter state 59
	'let\''        shift, and enter state 60
	'if'           shift, and enter state 61
	'trace'        shift, and enter state 62
	'fix'          shift, and enter state 63
	'fresh'        shift, and enter state 64
	'collect'      shift, and enter state 65
	'not'          shift, and enter state 66
	'+'            shift, and enter state 67
	'-'            shift, and enter state 68

	sexp           goto state 50
	exp            goto state 116

State 104

	exp -> exp '<' . exp                                (rule 49)

	INT            shift, and enter state 52
	VARID          shift, and enter state 53
	CONID          shift, and enter state 54
	'()'           shift, and enter state 55
	'('            shift, and enter state 56
	'['            shift, and enter state 57
	'case'         shift, and enter state 58
	'let'          shift, and enter state 59
	'let\''        shift, and enter state 60
	'if'           shift, and enter state 61
	'trace'        shift, and enter state 62
	'fix'          shift, and enter state 63
	'fresh'        shift, and enter state 64
	'collect'      shift, and enter state 65
	'not'          shift, and enter state 66
	'+'            shift, and enter state 67
	'-'            shift, and enter state 68

	sexp           goto state 50
	exp            goto state 115

State 105

	exp -> exp '>' . exp                                (rule 50)

	INT            shift, and enter state 52
	VARID          shift, and enter state 53
	CONID          shift, and enter state 54
	'()'           shift, and enter state 55
	'('            shift, and enter state 56
	'['            shift, and enter state 57
	'case'         shift, and enter state 58
	'let'          shift, and enter state 59
	'let\''        shift, and enter state 60
	'if'           shift, and enter state 61
	'trace'        shift, and enter state 62
	'fix'          shift, and enter state 63
	'fresh'        shift, and enter state 64
	'collect'      shift, and enter state 65
	'not'          shift, and enter state 66
	'+'            shift, and enter state 67
	'-'            shift, and enter state 68

	sexp           goto state 50
	exp            goto state 114

State 106

	exp -> exp '<=' . exp                               (rule 51)

	INT            shift, and enter state 52
	VARID          shift, and enter state 53
	CONID          shift, and enter state 54
	'()'           shift, and enter state 55
	'('            shift, and enter state 56
	'['            shift, and enter state 57
	'case'         shift, and enter state 58
	'let'          shift, and enter state 59
	'let\''        shift, and enter state 60
	'if'           shift, and enter state 61
	'trace'        shift, and enter state 62
	'fix'          shift, and enter state 63
	'fresh'        shift, and enter state 64
	'collect'      shift, and enter state 65
	'not'          shift, and enter state 66
	'+'            shift, and enter state 67
	'-'            shift, and enter state 68

	sexp           goto state 50
	exp            goto state 113

State 107

	exp -> exp '>=' . exp                               (rule 52)

	INT            shift, and enter state 52
	VARID          shift, and enter state 53
	CONID          shift, and enter state 54
	'()'           shift, and enter state 55
	'('            shift, and enter state 56
	'['            shift, and enter state 57
	'case'         shift, and enter state 58
	'let'          shift, and enter state 59
	'let\''        shift, and enter state 60
	'if'           shift, and enter state 61
	'trace'        shift, and enter state 62
	'fix'          shift, and enter state 63
	'fresh'        shift, and enter state 64
	'collect'      shift, and enter state 65
	'not'          shift, and enter state 66
	'+'            shift, and enter state 67
	'-'            shift, and enter state 68

	sexp           goto state 50
	exp            goto state 112

State 108

	sexps -> sexp .                                     (rule 63)
	sexps -> sexp . sexps                               (rule 64)

	INT            shift, and enter state 52
	VARID          shift, and enter state 53
	CONID          shift, and enter state 54
	'()'           shift, and enter state 55
	'('            shift, and enter state 56
	')'            reduce using rule 63
	'['            shift, and enter state 57
	']'            reduce using rule 63
	'{'            reduce using rule 63
	'}'            reduce using rule 63
	'!'            reduce using rule 63
	'of'           reduce using rule 63
	'end'          reduce using rule 63
	'in'           reduce using rule 63
	'then'         reduce using rule 63
	'else'         reduce using rule 63
	'data'         reduce using rule 63
	'sig'          reduce using rule 63
	'fun'          reduce using rule 63
	':'            reduce using rule 63
	','            reduce using rule 63
	'+'            reduce using rule 63
	'-'            reduce using rule 63
	'*'            reduce using rule 63
	'/'            reduce using rule 63
	'&&'           reduce using rule 63
	'||'           reduce using rule 63
	'=='           reduce using rule 63
	'/='           reduce using rule 63
	'<'            reduce using rule 63
	'>'            reduce using rule 63
	'<='           reduce using rule 63
	'>='           reduce using rule 63
	'|'            reduce using rule 63
	%eof           reduce using rule 63

	sexp           goto state 108
	sexps          goto state 111

State 109

	exp -> sexp sexps .                                 (rule 36)

	')'            reduce using rule 36
	']'            reduce using rule 36
	'{'            reduce using rule 36
	'}'            reduce using rule 36
	'!'            reduce using rule 36
	'of'           reduce using rule 36
	'end'          reduce using rule 36
	'in'           reduce using rule 36
	'then'         reduce using rule 36
	'else'         reduce using rule 36
	'data'         reduce using rule 36
	'sig'          reduce using rule 36
	'fun'          reduce using rule 36
	':'            reduce using rule 36
	','            reduce using rule 36
	'+'            reduce using rule 36
	'-'            reduce using rule 36
	'*'            reduce using rule 36
	'/'            reduce using rule 36
	'&&'           reduce using rule 36
	'||'           reduce using rule 36
	'=='           reduce using rule 36
	'/='           reduce using rule 36
	'<'            reduce using rule 36
	'>'            reduce using rule 36
	'<='           reduce using rule 36
	'>='           reduce using rule 36
	'|'            reduce using rule 36
	%eof           reduce using rule 36


State 110

	constrs -> constrs '|' constr .                     (rule 10)

	'in'           reduce using rule 10
	'data'         reduce using rule 10
	'sig'          reduce using rule 10
	'fun'          reduce using rule 10
	'|'            reduce using rule 10
	%eof           reduce using rule 10


State 111

	sexps -> sexp sexps .                               (rule 64)

	')'            reduce using rule 64
	']'            reduce using rule 64
	'{'            reduce using rule 64
	'}'            reduce using rule 64
	'!'            reduce using rule 64
	'of'           reduce using rule 64
	'end'          reduce using rule 64
	'in'           reduce using rule 64
	'then'         reduce using rule 64
	'else'         reduce using rule 64
	'data'         reduce using rule 64
	'sig'          reduce using rule 64
	'fun'          reduce using rule 64
	':'            reduce using rule 64
	','            reduce using rule 64
	'+'            reduce using rule 64
	'-'            reduce using rule 64
	'*'            reduce using rule 64
	'/'            reduce using rule 64
	'&&'           reduce using rule 64
	'||'           reduce using rule 64
	'=='           reduce using rule 64
	'/='           reduce using rule 64
	'<'            reduce using rule 64
	'>'            reduce using rule 64
	'<='           reduce using rule 64
	'>='           reduce using rule 64
	'|'            reduce using rule 64
	%eof           reduce using rule 64


State 112

	exp -> exp . '+' exp                                (rule 40)
	exp -> exp . '-' exp                                (rule 41)
	exp -> exp . '*' exp                                (rule 42)
	exp -> exp . '/' exp                                (rule 43)
	exp -> exp . '&&' exp                               (rule 44)
	exp -> exp . '{' exp '}' '||' '{' exp '}' exp       (rule 45)
	exp -> exp . '||' exp                               (rule 46)
	exp -> exp . '==' exp                               (rule 47)
	exp -> exp . '/=' exp                               (rule 48)
	exp -> exp . '<' exp                                (rule 49)
	exp -> exp . '>' exp                                (rule 50)
	exp -> exp . '<=' exp                               (rule 51)
	exp -> exp . '>=' exp                               (rule 52)
	exp -> exp '>=' exp .                               (rule 52)
	exp -> exp . ':' exp                                (rule 53)
	exp -> exp . '!' VARID                              (rule 60)

	')'            reduce using rule 52
	']'            reduce using rule 52
	'{'            reduce using rule 52
	'}'            reduce using rule 52
	'!'            reduce using rule 52
	'of'           reduce using rule 52
	'end'          reduce using rule 52
	'in'           reduce using rule 52
	'then'         reduce using rule 52
	'else'         reduce using rule 52
	'data'         reduce using rule 52
	'sig'          reduce using rule 52
	'fun'          reduce using rule 52
	':'            reduce using rule 52
	','            reduce using rule 52
	'+'            shift, and enter state 96
	'-'            shift, and enter state 97
	'*'            shift, and enter state 98
	'/'            shift, and enter state 99
	'&&'           reduce using rule 52
	'||'           reduce using rule 52
	'=='           fail
	'/='           fail
	'<'            fail
	'>'            fail
	'<='           fail
	'>='           fail
	'|'            reduce using rule 52
	%eof           reduce using rule 52


State 113

	exp -> exp . '+' exp                                (rule 40)
	exp -> exp . '-' exp                                (rule 41)
	exp -> exp . '*' exp                                (rule 42)
	exp -> exp . '/' exp                                (rule 43)
	exp -> exp . '&&' exp                               (rule 44)
	exp -> exp . '{' exp '}' '||' '{' exp '}' exp       (rule 45)
	exp -> exp . '||' exp                               (rule 46)
	exp -> exp . '==' exp                               (rule 47)
	exp -> exp . '/=' exp                               (rule 48)
	exp -> exp . '<' exp                                (rule 49)
	exp -> exp . '>' exp                                (rule 50)
	exp -> exp . '<=' exp                               (rule 51)
	exp -> exp '<=' exp .                               (rule 51)
	exp -> exp . '>=' exp                               (rule 52)
	exp -> exp . ':' exp                                (rule 53)
	exp -> exp . '!' VARID                              (rule 60)

	')'            reduce using rule 51
	']'            reduce using rule 51
	'{'            reduce using rule 51
	'}'            reduce using rule 51
	'!'            reduce using rule 51
	'of'           reduce using rule 51
	'end'          reduce using rule 51
	'in'           reduce using rule 51
	'then'         reduce using rule 51
	'else'         reduce using rule 51
	'data'         reduce using rule 51
	'sig'          reduce using rule 51
	'fun'          reduce using rule 51
	':'            reduce using rule 51
	','            reduce using rule 51
	'+'            shift, and enter state 96
	'-'            shift, and enter state 97
	'*'            shift, and enter state 98
	'/'            shift, and enter state 99
	'&&'           reduce using rule 51
	'||'           reduce using rule 51
	'=='           fail
	'/='           fail
	'<'            fail
	'>'            fail
	'<='           fail
	'>='           fail
	'|'            reduce using rule 51
	%eof           reduce using rule 51


State 114

	exp -> exp . '+' exp                                (rule 40)
	exp -> exp . '-' exp                                (rule 41)
	exp -> exp . '*' exp                                (rule 42)
	exp -> exp . '/' exp                                (rule 43)
	exp -> exp . '&&' exp                               (rule 44)
	exp -> exp . '{' exp '}' '||' '{' exp '}' exp       (rule 45)
	exp -> exp . '||' exp                               (rule 46)
	exp -> exp . '==' exp                               (rule 47)
	exp -> exp . '/=' exp                               (rule 48)
	exp -> exp . '<' exp                                (rule 49)
	exp -> exp . '>' exp                                (rule 50)
	exp -> exp '>' exp .                                (rule 50)
	exp -> exp . '<=' exp                               (rule 51)
	exp -> exp . '>=' exp                               (rule 52)
	exp -> exp . ':' exp                                (rule 53)
	exp -> exp . '!' VARID                              (rule 60)

	')'            reduce using rule 50
	']'            reduce using rule 50
	'{'            reduce using rule 50
	'}'            reduce using rule 50
	'!'            reduce using rule 50
	'of'           reduce using rule 50
	'end'          reduce using rule 50
	'in'           reduce using rule 50
	'then'         reduce using rule 50
	'else'         reduce using rule 50
	'data'         reduce using rule 50
	'sig'          reduce using rule 50
	'fun'          reduce using rule 50
	':'            reduce using rule 50
	','            reduce using rule 50
	'+'            shift, and enter state 96
	'-'            shift, and enter state 97
	'*'            shift, and enter state 98
	'/'            shift, and enter state 99
	'&&'           reduce using rule 50
	'||'           reduce using rule 50
	'=='           fail
	'/='           fail
	'<'            fail
	'>'            fail
	'<='           fail
	'>='           fail
	'|'            reduce using rule 50
	%eof           reduce using rule 50


State 115

	exp -> exp . '+' exp                                (rule 40)
	exp -> exp . '-' exp                                (rule 41)
	exp -> exp . '*' exp                                (rule 42)
	exp -> exp . '/' exp                                (rule 43)
	exp -> exp . '&&' exp                               (rule 44)
	exp -> exp . '{' exp '}' '||' '{' exp '}' exp       (rule 45)
	exp -> exp . '||' exp                               (rule 46)
	exp -> exp . '==' exp                               (rule 47)
	exp -> exp . '/=' exp                               (rule 48)
	exp -> exp . '<' exp                                (rule 49)
	exp -> exp '<' exp .                                (rule 49)
	exp -> exp . '>' exp                                (rule 50)
	exp -> exp . '<=' exp                               (rule 51)
	exp -> exp . '>=' exp                               (rule 52)
	exp -> exp . ':' exp                                (rule 53)
	exp -> exp . '!' VARID                              (rule 60)

	')'            reduce using rule 49
	']'            reduce using rule 49
	'{'            reduce using rule 49
	'}'            reduce using rule 49
	'!'            reduce using rule 49
	'of'           reduce using rule 49
	'end'          reduce using rule 49
	'in'           reduce using rule 49
	'then'         reduce using rule 49
	'else'         reduce using rule 49
	'data'         reduce using rule 49
	'sig'          reduce using rule 49
	'fun'          reduce using rule 49
	':'            reduce using rule 49
	','            reduce using rule 49
	'+'            shift, and enter state 96
	'-'            shift, and enter state 97
	'*'            shift, and enter state 98
	'/'            shift, and enter state 99
	'&&'           reduce using rule 49
	'||'           reduce using rule 49
	'=='           fail
	'/='           fail
	'<'            fail
	'>'            fail
	'<='           fail
	'>='           fail
	'|'            reduce using rule 49
	%eof           reduce using rule 49


State 116

	exp -> exp . '+' exp                                (rule 40)
	exp -> exp . '-' exp                                (rule 41)
	exp -> exp . '*' exp                                (rule 42)
	exp -> exp . '/' exp                                (rule 43)
	exp -> exp . '&&' exp                               (rule 44)
	exp -> exp . '{' exp '}' '||' '{' exp '}' exp       (rule 45)
	exp -> exp . '||' exp                               (rule 46)
	exp -> exp . '==' exp                               (rule 47)
	exp -> exp . '/=' exp                               (rule 48)
	exp -> exp '/=' exp .                               (rule 48)
	exp -> exp . '<' exp                                (rule 49)
	exp -> exp . '>' exp                                (rule 50)
	exp -> exp . '<=' exp                               (rule 51)
	exp -> exp . '>=' exp                               (rule 52)
	exp -> exp . ':' exp                                (rule 53)
	exp -> exp . '!' VARID                              (rule 60)

	')'            reduce using rule 48
	']'            reduce using rule 48
	'{'            reduce using rule 48
	'}'            reduce using rule 48
	'!'            reduce using rule 48
	'of'           reduce using rule 48
	'end'          reduce using rule 48
	'in'           reduce using rule 48
	'then'         reduce using rule 48
	'else'         reduce using rule 48
	'data'         reduce using rule 48
	'sig'          reduce using rule 48
	'fun'          reduce using rule 48
	':'            reduce using rule 48
	','            reduce using rule 48
	'+'            shift, and enter state 96
	'-'            shift, and enter state 97
	'*'            shift, and enter state 98
	'/'            shift, and enter state 99
	'&&'           reduce using rule 48
	'||'           reduce using rule 48
	'=='           fail
	'/='           fail
	'<'            fail
	'>'            fail
	'<='           fail
	'>='           fail
	'|'            reduce using rule 48
	%eof           reduce using rule 48


State 117

	exp -> exp . '+' exp                                (rule 40)
	exp -> exp . '-' exp                                (rule 41)
	exp -> exp . '*' exp                                (rule 42)
	exp -> exp . '/' exp                                (rule 43)
	exp -> exp . '&&' exp                               (rule 44)
	exp -> exp . '{' exp '}' '||' '{' exp '}' exp       (rule 45)
	exp -> exp . '||' exp                               (rule 46)
	exp -> exp . '==' exp                               (rule 47)
	exp -> exp '==' exp .                               (rule 47)
	exp -> exp . '/=' exp                               (rule 48)
	exp -> exp . '<' exp                                (rule 49)
	exp -> exp . '>' exp                                (rule 50)
	exp -> exp . '<=' exp                               (rule 51)
	exp -> exp . '>=' exp                               (rule 52)
	exp -> exp . ':' exp                                (rule 53)
	exp -> exp . '!' VARID                              (rule 60)

	')'            reduce using rule 47
	']'            reduce using rule 47
	'{'            reduce using rule 47
	'}'            reduce using rule 47
	'!'            reduce using rule 47
	'of'           reduce using rule 47
	'end'          reduce using rule 47
	'in'           reduce using rule 47
	'then'         reduce using rule 47
	'else'         reduce using rule 47
	'data'         reduce using rule 47
	'sig'          reduce using rule 47
	'fun'          reduce using rule 47
	':'            reduce using rule 47
	','            reduce using rule 47
	'+'            shift, and enter state 96
	'-'            shift, and enter state 97
	'*'            shift, and enter state 98
	'/'            shift, and enter state 99
	'&&'           reduce using rule 47
	'||'           reduce using rule 47
	'=='           fail
	'/='           fail
	'<'            fail
	'>'            fail
	'<='           fail
	'>='           fail
	'|'            reduce using rule 47
	%eof           reduce using rule 47


State 118

	exp -> exp . '+' exp                                (rule 40)
	exp -> exp . '-' exp                                (rule 41)
	exp -> exp . '*' exp                                (rule 42)
	exp -> exp . '/' exp                                (rule 43)
	exp -> exp . '&&' exp                               (rule 44)
	exp -> exp . '{' exp '}' '||' '{' exp '}' exp       (rule 45)
	exp -> exp . '||' exp                               (rule 46)
	exp -> exp '||' exp .                               (rule 46)
	exp -> exp . '==' exp                               (rule 47)
	exp -> exp . '/=' exp                               (rule 48)
	exp -> exp . '<' exp                                (rule 49)
	exp -> exp . '>' exp                                (rule 50)
	exp -> exp . '<=' exp                               (rule 51)
	exp -> exp . '>=' exp                               (rule 52)
	exp -> exp . ':' exp                                (rule 53)
	exp -> exp . '!' VARID                              (rule 60)

	')'            reduce using rule 46
	']'            reduce using rule 46
	'{'            reduce using rule 46
	'}'            reduce using rule 46
	'!'            reduce using rule 46
	'of'           reduce using rule 46
	'end'          reduce using rule 46
	'in'           reduce using rule 46
	'then'         reduce using rule 46
	'else'         reduce using rule 46
	'data'         reduce using rule 46
	'sig'          reduce using rule 46
	'fun'          reduce using rule 46
	':'            reduce using rule 46
	','            reduce using rule 46
	'+'            shift, and enter state 96
	'-'            shift, and enter state 97
	'*'            shift, and enter state 98
	'/'            shift, and enter state 99
	'&&'           shift, and enter state 100
	'||'           reduce using rule 46
	'=='           shift, and enter state 102
	'/='           shift, and enter state 103
	'<'            shift, and enter state 104
	'>'            shift, and enter state 105
	'<='           shift, and enter state 106
	'>='           shift, and enter state 107
	'|'            reduce using rule 46
	%eof           reduce using rule 46


State 119

	exp -> exp . '+' exp                                (rule 40)
	exp -> exp . '-' exp                                (rule 41)
	exp -> exp . '*' exp                                (rule 42)
	exp -> exp . '/' exp                                (rule 43)
	exp -> exp . '&&' exp                               (rule 44)
	exp -> exp '&&' exp .                               (rule 44)
	exp -> exp . '{' exp '}' '||' '{' exp '}' exp       (rule 45)
	exp -> exp . '||' exp                               (rule 46)
	exp -> exp . '==' exp                               (rule 47)
	exp -> exp . '/=' exp                               (rule 48)
	exp -> exp . '<' exp                                (rule 49)
	exp -> exp . '>' exp                                (rule 50)
	exp -> exp . '<=' exp                               (rule 51)
	exp -> exp . '>=' exp                               (rule 52)
	exp -> exp . ':' exp                                (rule 53)
	exp -> exp . '!' VARID                              (rule 60)

	')'            reduce using rule 44
	']'            reduce using rule 44
	'{'            reduce using rule 44
	'}'            reduce using rule 44
	'!'            reduce using rule 44
	'of'           reduce using rule 44
	'end'          reduce using rule 44
	'in'           reduce using rule 44
	'then'         reduce using rule 44
	'else'         reduce using rule 44
	'data'         reduce using rule 44
	'sig'          reduce using rule 44
	'fun'          reduce using rule 44
	':'            reduce using rule 44
	','            reduce using rule 44
	'+'            shift, and enter state 96
	'-'            shift, and enter state 97
	'*'            shift, and enter state 98
	'/'            shift, and enter state 99
	'&&'           reduce using rule 44
	'||'           reduce using rule 44
	'=='           shift, and enter state 102
	'/='           shift, and enter state 103
	'<'            shift, and enter state 104
	'>'            shift, and enter state 105
	'<='           shift, and enter state 106
	'>='           shift, and enter state 107
	'|'            reduce using rule 44
	%eof           reduce using rule 44


State 120

	exp -> exp . '+' exp                                (rule 40)
	exp -> exp . '-' exp                                (rule 41)
	exp -> exp . '*' exp                                (rule 42)
	exp -> exp . '/' exp                                (rule 43)
	exp -> exp '/' exp .                                (rule 43)
	exp -> exp . '&&' exp                               (rule 44)
	exp -> exp . '{' exp '}' '||' '{' exp '}' exp       (rule 45)
	exp -> exp . '||' exp                               (rule 46)
	exp -> exp . '==' exp                               (rule 47)
	exp -> exp . '/=' exp                               (rule 48)
	exp -> exp . '<' exp                                (rule 49)
	exp -> exp . '>' exp                                (rule 50)
	exp -> exp . '<=' exp                               (rule 51)
	exp -> exp . '>=' exp                               (rule 52)
	exp -> exp . ':' exp                                (rule 53)
	exp -> exp . '!' VARID                              (rule 60)

	')'            reduce using rule 43
	']'            reduce using rule 43
	'{'            reduce using rule 43
	'}'            reduce using rule 43
	'!'            reduce using rule 43
	'of'           reduce using rule 43
	'end'          reduce using rule 43
	'in'           reduce using rule 43
	'then'         reduce using rule 43
	'else'         reduce using rule 43
	'data'         reduce using rule 43
	'sig'          reduce using rule 43
	'fun'          reduce using rule 43
	':'            reduce using rule 43
	','            reduce using rule 43
	'+'            reduce using rule 43
	'-'            reduce using rule 43
	'*'            reduce using rule 43
	'/'            reduce using rule 43
	'&&'           reduce using rule 43
	'||'           reduce using rule 43
	'=='           reduce using rule 43
	'/='           reduce using rule 43
	'<'            reduce using rule 43
	'>'            reduce using rule 43
	'<='           reduce using rule 43
	'>='           reduce using rule 43
	'|'            reduce using rule 43
	%eof           reduce using rule 43


State 121

	exp -> exp . '+' exp                                (rule 40)
	exp -> exp . '-' exp                                (rule 41)
	exp -> exp . '*' exp                                (rule 42)
	exp -> exp '*' exp .                                (rule 42)
	exp -> exp . '/' exp                                (rule 43)
	exp -> exp . '&&' exp                               (rule 44)
	exp -> exp . '{' exp '}' '||' '{' exp '}' exp       (rule 45)
	exp -> exp . '||' exp                               (rule 46)
	exp -> exp . '==' exp                               (rule 47)
	exp -> exp . '/=' exp                               (rule 48)
	exp -> exp . '<' exp                                (rule 49)
	exp -> exp . '>' exp                                (rule 50)
	exp -> exp . '<=' exp                               (rule 51)
	exp -> exp . '>=' exp                               (rule 52)
	exp -> exp . ':' exp                                (rule 53)
	exp -> exp . '!' VARID                              (rule 60)

	')'            reduce using rule 42
	']'            reduce using rule 42
	'{'            reduce using rule 42
	'}'            reduce using rule 42
	'!'            reduce using rule 42
	'of'           reduce using rule 42
	'end'          reduce using rule 42
	'in'           reduce using rule 42
	'then'         reduce using rule 42
	'else'         reduce using rule 42
	'data'         reduce using rule 42
	'sig'          reduce using rule 42
	'fun'          reduce using rule 42
	':'            reduce using rule 42
	','            reduce using rule 42
	'+'            reduce using rule 42
	'-'            reduce using rule 42
	'*'            reduce using rule 42
	'/'            reduce using rule 42
	'&&'           reduce using rule 42
	'||'           reduce using rule 42
	'=='           reduce using rule 42
	'/='           reduce using rule 42
	'<'            reduce using rule 42
	'>'            reduce using rule 42
	'<='           reduce using rule 42
	'>='           reduce using rule 42
	'|'            reduce using rule 42
	%eof           reduce using rule 42


State 122

	exp -> exp . '+' exp                                (rule 40)
	exp -> exp . '-' exp                                (rule 41)
	exp -> exp '-' exp .                                (rule 41)
	exp -> exp . '*' exp                                (rule 42)
	exp -> exp . '/' exp                                (rule 43)
	exp -> exp . '&&' exp                               (rule 44)
	exp -> exp . '{' exp '}' '||' '{' exp '}' exp       (rule 45)
	exp -> exp . '||' exp                               (rule 46)
	exp -> exp . '==' exp                               (rule 47)
	exp -> exp . '/=' exp                               (rule 48)
	exp -> exp . '<' exp                                (rule 49)
	exp -> exp . '>' exp                                (rule 50)
	exp -> exp . '<=' exp                               (rule 51)
	exp -> exp . '>=' exp                               (rule 52)
	exp -> exp . ':' exp                                (rule 53)
	exp -> exp . '!' VARID                              (rule 60)

	')'            reduce using rule 41
	']'            reduce using rule 41
	'{'            reduce using rule 41
	'}'            reduce using rule 41
	'!'            reduce using rule 41
	'of'           reduce using rule 41
	'end'          reduce using rule 41
	'in'           reduce using rule 41
	'then'         reduce using rule 41
	'else'         reduce using rule 41
	'data'         reduce using rule 41
	'sig'          reduce using rule 41
	'fun'          reduce using rule 41
	':'            reduce using rule 41
	','            reduce using rule 41
	'+'            reduce using rule 41
	'-'            reduce using rule 41
	'*'            shift, and enter state 98
	'/'            shift, and enter state 99
	'&&'           reduce using rule 41
	'||'           reduce using rule 41
	'=='           reduce using rule 41
	'/='           reduce using rule 41
	'<'            reduce using rule 41
	'>'            reduce using rule 41
	'<='           reduce using rule 41
	'>='           reduce using rule 41
	'|'            reduce using rule 41
	%eof           reduce using rule 41


State 123

	exp -> exp . '+' exp                                (rule 40)
	exp -> exp '+' exp .                                (rule 40)
	exp -> exp . '-' exp                                (rule 41)
	exp -> exp . '*' exp                                (rule 42)
	exp -> exp . '/' exp                                (rule 43)
	exp -> exp . '&&' exp                               (rule 44)
	exp -> exp . '{' exp '}' '||' '{' exp '}' exp       (rule 45)
	exp -> exp . '||' exp                               (rule 46)
	exp -> exp . '==' exp                               (rule 47)
	exp -> exp . '/=' exp                               (rule 48)
	exp -> exp . '<' exp                                (rule 49)
	exp -> exp . '>' exp                                (rule 50)
	exp -> exp . '<=' exp                               (rule 51)
	exp -> exp . '>=' exp                               (rule 52)
	exp -> exp . ':' exp                                (rule 53)
	exp -> exp . '!' VARID                              (rule 60)

	')'            reduce using rule 40
	']'            reduce using rule 40
	'{'            reduce using rule 40
	'}'            reduce using rule 40
	'!'            reduce using rule 40
	'of'           reduce using rule 40
	'end'          reduce using rule 40
	'in'           reduce using rule 40
	'then'         reduce using rule 40
	'else'         reduce using rule 40
	'data'         reduce using rule 40
	'sig'          reduce using rule 40
	'fun'          reduce using rule 40
	':'            reduce using rule 40
	','            reduce using rule 40
	'+'            reduce using rule 40
	'-'            reduce using rule 40
	'*'            shift, and enter state 98
	'/'            shift, and enter state 99
	'&&'           reduce using rule 40
	'||'           reduce using rule 40
	'=='           reduce using rule 40
	'/='           reduce using rule 40
	'<'            reduce using rule 40
	'>'            reduce using rule 40
	'<='           reduce using rule 40
	'>='           reduce using rule 40
	'|'            reduce using rule 40
	%eof           reduce using rule 40


State 124

	exp -> exp . '+' exp                                (rule 40)
	exp -> exp . '-' exp                                (rule 41)
	exp -> exp . '*' exp                                (rule 42)
	exp -> exp . '/' exp                                (rule 43)
	exp -> exp . '&&' exp                               (rule 44)
	exp -> exp . '{' exp '}' '||' '{' exp '}' exp       (rule 45)
	exp -> exp . '||' exp                               (rule 46)
	exp -> exp . '==' exp                               (rule 47)
	exp -> exp . '/=' exp                               (rule 48)
	exp -> exp . '<' exp                                (rule 49)
	exp -> exp . '>' exp                                (rule 50)
	exp -> exp . '<=' exp                               (rule 51)
	exp -> exp . '>=' exp                               (rule 52)
	exp -> exp . ':' exp                                (rule 53)
	exp -> exp ':' exp .                                (rule 53)
	exp -> exp . '!' VARID                              (rule 60)

	')'            reduce using rule 53
	']'            reduce using rule 53
	'{'            shift, and enter state 93
	'}'            reduce using rule 53
	'!'            shift, and enter state 94
	'of'           reduce using rule 53
	'end'          reduce using rule 53
	'in'           reduce using rule 53
	'then'         reduce using rule 53
	'else'         reduce using rule 53
	'data'         reduce using rule 53
	'sig'          reduce using rule 53
	'fun'          reduce using rule 53
	':'            shift, and enter state 95
	','            reduce using rule 53
	'+'            shift, and enter state 96
	'-'            shift, and enter state 97
	'*'            shift, and enter state 98
	'/'            shift, and enter state 99
	'&&'           shift, and enter state 100
	'||'           shift, and enter state 101
	'=='           shift, and enter state 102
	'/='           shift, and enter state 103
	'<'            shift, and enter state 104
	'>'            shift, and enter state 105
	'<='           shift, and enter state 106
	'>='           shift, and enter state 107
	'|'            reduce using rule 53
	%eof           reduce using rule 53


State 125

	exp -> exp '!' VARID .                              (rule 60)

	')'            reduce using rule 60
	']'            reduce using rule 60
	'{'            reduce using rule 60
	'}'            reduce using rule 60
	'!'            reduce using rule 60
	'of'           reduce using rule 60
	'end'          reduce using rule 60
	'in'           reduce using rule 60
	'then'         reduce using rule 60
	'else'         reduce using rule 60
	'data'         reduce using rule 60
	'sig'          reduce using rule 60
	'fun'          reduce using rule 60
	':'            reduce using rule 60
	','            reduce using rule 60
	'+'            reduce using rule 60
	'-'            reduce using rule 60
	'*'            reduce using rule 60
	'/'            reduce using rule 60
	'&&'           reduce using rule 60
	'||'           reduce using rule 60
	'=='           reduce using rule 60
	'/='           reduce using rule 60
	'<'            reduce using rule 60
	'>'            reduce using rule 60
	'<='           reduce using rule 60
	'>='           reduce using rule 60
	'|'            reduce using rule 60
	%eof           reduce using rule 60


State 126

	exp -> exp . '+' exp                                (rule 40)
	exp -> exp . '-' exp                                (rule 41)
	exp -> exp . '*' exp                                (rule 42)
	exp -> exp . '/' exp                                (rule 43)
	exp -> exp . '&&' exp                               (rule 44)
	exp -> exp . '{' exp '}' '||' '{' exp '}' exp       (rule 45)
	exp -> exp '{' exp . '}' '||' '{' exp '}' exp       (rule 45)
	exp -> exp . '||' exp                               (rule 46)
	exp -> exp . '==' exp                               (rule 47)
	exp -> exp . '/=' exp                               (rule 48)
	exp -> exp . '<' exp                                (rule 49)
	exp -> exp . '>' exp                                (rule 50)
	exp -> exp . '<=' exp                               (rule 51)
	exp -> exp . '>=' exp                               (rule 52)
	exp -> exp . ':' exp                                (rule 53)
	exp -> exp . '!' VARID                              (rule 60)

	'{'            shift, and enter state 93
	'}'            shift, and enter state 166
	'!'            shift, and enter state 94
	':'            shift, and enter state 95
	'+'            shift, and enter state 96
	'-'            shift, and enter state 97
	'*'            shift, and enter state 98
	'/'            shift, and enter state 99
	'&&'           shift, and enter state 100
	'||'           shift, and enter state 101
	'=='           shift, and enter state 102
	'/='           shift, and enter state 103
	'<'            shift, and enter state 104
	'>'            shift, and enter state 105
	'<='           shift, and enter state 106
	'>='           shift, and enter state 107


State 127

	sexp -> '(' ccexps ')' .                            (rule 33)

	INT            reduce using rule 33
	VARID          reduce using rule 33
	CONID          reduce using rule 33
	'()'           reduce using rule 33
	'('            reduce using rule 33
	')'            reduce using rule 33
	'['            reduce using rule 33
	']'            reduce using rule 33
	'{'            reduce using rule 33
	'}'            reduce using rule 33
	'!'            reduce using rule 33
	'of'           reduce using rule 33
	'end'          reduce using rule 33
	'in'           reduce using rule 33
	'then'         reduce using rule 33
	'else'         reduce using rule 33
	'data'         reduce using rule 33
	'sig'          reduce using rule 33
	'fun'          reduce using rule 33
	':'            reduce using rule 33
	','            reduce using rule 33
	'+'            reduce using rule 33
	'-'            reduce using rule 33
	'*'            reduce using rule 33
	'/'            reduce using rule 33
	'&&'           reduce using rule 33
	'||'           reduce using rule 33
	'=='           reduce using rule 33
	'/='           reduce using rule 33
	'<'            reduce using rule 33
	'>'            reduce using rule 33
	'<='           reduce using rule 33
	'>='           reduce using rule 33
	'|'            reduce using rule 33
	%eof           reduce using rule 33


State 128

	sexp -> '(' exp ')' .                               (rule 32)

	INT            reduce using rule 32
	VARID          reduce using rule 32
	CONID          reduce using rule 32
	'()'           reduce using rule 32
	'('            reduce using rule 32
	')'            reduce using rule 32
	'['            reduce using rule 32
	']'            reduce using rule 32
	'{'            reduce using rule 32
	'}'            reduce using rule 32
	'!'            reduce using rule 32
	'of'           reduce using rule 32
	'end'          reduce using rule 32
	'in'           reduce using rule 32
	'then'         reduce using rule 32
	'else'         reduce using rule 32
	'data'         reduce using rule 32
	'sig'          reduce using rule 32
	'fun'          reduce using rule 32
	':'            reduce using rule 32
	','            reduce using rule 32
	'+'            reduce using rule 32
	'-'            reduce using rule 32
	'*'            reduce using rule 32
	'/'            reduce using rule 32
	'&&'           reduce using rule 32
	'||'           reduce using rule 32
	'=='           reduce using rule 32
	'/='           reduce using rule 32
	'<'            reduce using rule 32
	'>'            reduce using rule 32
	'<='           reduce using rule 32
	'>='           reduce using rule 32
	'|'            reduce using rule 32
	%eof           reduce using rule 32


State 129

	ccexps -> exp ',' . cexps                           (rule 69)

	INT            shift, and enter state 52
	VARID          shift, and enter state 53
	CONID          shift, and enter state 54
	'()'           shift, and enter state 55
	'('            shift, and enter state 56
	'['            shift, and enter state 57
	'case'         shift, and enter state 58
	'let'          shift, and enter state 59
	'let\''        shift, and enter state 60
	'if'           shift, and enter state 61
	'trace'        shift, and enter state 62
	'fix'          shift, and enter state 63
	'fresh'        shift, and enter state 64
	'collect'      shift, and enter state 65
	'not'          shift, and enter state 66
	'+'            shift, and enter state 67
	'-'            shift, and enter state 68

	sexp           goto state 50
	exp            goto state 87
	cexps          goto state 165
	ccexps         goto state 90

State 130

	sexp -> '[' exps ']' .                              (rule 34)

	INT            reduce using rule 34
	VARID          reduce using rule 34
	CONID          reduce using rule 34
	'()'           reduce using rule 34
	'('            reduce using rule 34
	')'            reduce using rule 34
	'['            reduce using rule 34
	']'            reduce using rule 34
	'{'            reduce using rule 34
	'}'            reduce using rule 34
	'!'            reduce using rule 34
	'of'           reduce using rule 34
	'end'          reduce using rule 34
	'in'           reduce using rule 34
	'then'         reduce using rule 34
	'else'         reduce using rule 34
	'data'         reduce using rule 34
	'sig'          reduce using rule 34
	'fun'          reduce using rule 34
	':'            reduce using rule 34
	','            reduce using rule 34
	'+'            reduce using rule 34
	'-'            reduce using rule 34
	'*'            reduce using rule 34
	'/'            reduce using rule 34
	'&&'           reduce using rule 34
	'||'           reduce using rule 34
	'=='           reduce using rule 34
	'/='           reduce using rule 34
	'<'            reduce using rule 34
	'>'            reduce using rule 34
	'<='           reduce using rule 34
	'>='           reduce using rule 34
	'|'            reduce using rule 34
	%eof           reduce using rule 34


State 131

	exp -> 'case' exp 'of' . branches 'end'             (rule 54)

	'|'            shift, and enter state 164

	branches       goto state 162
	branch         goto state 163

State 132

	exp -> 'let' decls 'in' . exp                       (rule 55)

	INT            shift, and enter state 52
	VARID          shift, and enter state 53
	CONID          shift, and enter state 54
	'()'           shift, and enter state 55
	'('            shift, and enter state 56
	'['            shift, and enter state 57
	'case'         shift, and enter state 58
	'let'          shift, and enter state 59
	'let\''        shift, and enter state 60
	'if'           shift, and enter state 61
	'trace'        shift, and enter state 62
	'fix'          shift, and enter state 63
	'fresh'        shift, and enter state 64
	'collect'      shift, and enter state 65
	'not'          shift, and enter state 66
	'+'            shift, and enter state 67
	'-'            shift, and enter state 68

	sexp           goto state 50
	exp            goto state 161

State 133

	pat -> pat . ':' pat                                (rule 77)
	cpats -> pat .                                      (rule 88)
	ccpats -> pat . ',' cpats                           (rule 90)

	')'            reduce using rule 88
	']'            reduce using rule 88
	':'            shift, and enter state 143
	','            shift, and enter state 159


State 134

	ppat -> '[' cpats . ']'                             (rule 85)

	']'            shift, and enter state 160


State 135

	cpats -> ccpats .                                   (rule 89)

	')'            reduce using rule 89
	']'            reduce using rule 89


State 136

	ppat -> '[' ']' .                                   (rule 84)

	'='            reduce using rule 84
	VARID          reduce using rule 84
	CONID          reduce using rule 84
	'()'           reduce using rule 84
	'('            reduce using rule 84
	')'            reduce using rule 84
	'['            reduce using rule 84
	']'            reduce using rule 84
	'_'            reduce using rule 84
	':'            reduce using rule 84
	','            reduce using rule 84
	'->'           reduce using rule 84


State 137

	pat -> pat . ':' pat                                (rule 77)
	ppat -> '(' pat . ')'                               (rule 82)
	ccpats -> pat . ',' cpats                           (rule 90)

	')'            shift, and enter state 158
	':'            shift, and enter state 143
	','            shift, and enter state 159


State 138

	ppat -> '(' ccpats . ')'                            (rule 83)

	')'            shift, and enter state 157


State 139

	ppats -> ppat .                                     (rule 86)
	ppats -> ppat . ppats                               (rule 87)

	'='            reduce using rule 86
	VARID          shift, and enter state 79
	CONID          shift, and enter state 141
	'()'           shift, and enter state 81
	'('            shift, and enter state 82
	')'            reduce using rule 86
	'['            shift, and enter state 83
	']'            reduce using rule 86
	'_'            shift, and enter state 84
	':'            reduce using rule 86
	','            reduce using rule 86
	'->'           reduce using rule 86

	ppat           goto state 139
	ppats          goto state 156

State 140

	pat -> CONID ppats .                                (rule 76)

	'='            reduce using rule 76
	')'            reduce using rule 76
	']'            reduce using rule 76
	':'            reduce using rule 76
	','            reduce using rule 76
	'->'           reduce using rule 76


State 141

	ppat -> CONID .                                     (rule 80)

	'='            reduce using rule 80
	VARID          reduce using rule 80
	CONID          reduce using rule 80
	'()'           reduce using rule 80
	'('            reduce using rule 80
	')'            reduce using rule 80
	'['            reduce using rule 80
	']'            reduce using rule 80
	'_'            reduce using rule 80
	':'            reduce using rule 80
	','            reduce using rule 80
	'->'           reduce using rule 80


State 142

	exp -> 'let\'' pat '=' . exp 'in' exp               (rule 56)

	INT            shift, and enter state 52
	VARID          shift, and enter state 53
	CONID          shift, and enter state 54
	'()'           shift, and enter state 55
	'('            shift, and enter state 56
	'['            shift, and enter state 57
	'case'         shift, and enter state 58
	'let'          shift, and enter state 59
	'let\''        shift, and enter state 60
	'if'           shift, and enter state 61
	'trace'        shift, and enter state 62
	'fix'          shift, and enter state 63
	'fresh'        shift, and enter state 64
	'collect'      shift, and enter state 65
	'not'          shift, and enter state 66
	'+'            shift, and enter state 67
	'-'            shift, and enter state 68

	sexp           goto state 50
	exp            goto state 155

State 143

	pat -> pat ':' . pat                                (rule 77)

	VARID          shift, and enter state 79
	CONID          shift, and enter state 80
	'()'           shift, and enter state 81
	'('            shift, and enter state 82
	'['            shift, and enter state 83
	'_'            shift, and enter state 84

	pat            goto state 154
	ppat           goto state 78

State 144

	exp -> 'if' exp 'then' . exp 'else' exp             (rule 57)

	INT            shift, and enter state 52
	VARID          shift, and enter state 53
	CONID          shift, and enter state 54
	'()'           shift, and enter state 55
	'('            shift, and enter state 56
	'['            shift, and enter state 57
	'case'         shift, and enter state 58
	'let'          shift, and enter state 59
	'let\''        shift, and enter state 60
	'if'           shift, and enter state 61
	'trace'        shift, and enter state 62
	'fix'          shift, and enter state 63
	'fresh'        shift, and enter state 64
	'collect'      shift, and enter state 65
	'not'          shift, and enter state 66
	'+'            shift, and enter state 67
	'-'            shift, and enter state 68

	sexp           goto state 50
	exp            goto state 153

State 145

	exp -> 'trace' VARID '(' . exp ')'                  (rule 61)

	INT            shift, and enter state 52
	VARID          shift, and enter state 53
	CONID          shift, and enter state 54
	'()'           shift, and enter state 55
	'('            shift, and enter state 56
	'['            shift, and enter state 57
	'case'         shift, and enter state 58
	'let'          shift, and enter state 59
	'let\''        shift, and enter state 60
	'if'           shift, and enter state 61
	'trace'        shift, and enter state 62
	'fix'          shift, and enter state 63
	'fresh'        shift, and enter state 64
	'collect'      shift, and enter state 65
	'not'          shift, and enter state 66
	'+'            shift, and enter state 67
	'-'            shift, and enter state 68

	sexp           goto state 50
	exp            goto state 152

State 146

	exp -> exp . '+' exp                                (rule 40)
	exp -> exp . '-' exp                                (rule 41)
	exp -> exp . '*' exp                                (rule 42)
	exp -> exp . '/' exp                                (rule 43)
	exp -> exp . '&&' exp                               (rule 44)
	exp -> exp . '{' exp '}' '||' '{' exp '}' exp       (rule 45)
	exp -> exp . '||' exp                               (rule 46)
	exp -> exp . '==' exp                               (rule 47)
	exp -> exp . '/=' exp                               (rule 48)
	exp -> exp . '<' exp                                (rule 49)
	exp -> exp . '>' exp                                (rule 50)
	exp -> exp . '<=' exp                               (rule 51)
	exp -> exp . '>=' exp                               (rule 52)
	exp -> exp . ':' exp                                (rule 53)
	exp -> 'fix' '{' exp . '}'                          (rule 58)
	exp -> exp . '!' VARID                              (rule 60)

	'{'            shift, and enter state 93
	'}'            shift, and enter state 151
	'!'            shift, and enter state 94
	':'            shift, and enter state 95
	'+'            shift, and enter state 96
	'-'            shift, and enter state 97
	'*'            shift, and enter state 98
	'/'            shift, and enter state 99
	'&&'           shift, and enter state 100
	'||'           shift, and enter state 101
	'=='           shift, and enter state 102
	'/='           shift, and enter state 103
	'<'            shift, and enter state 104
	'>'            shift, and enter state 105
	'<='           shift, and enter state 106
	'>='           shift, and enter state 107


State 147

	exp -> 'fresh' '{' VARID . ':' btype '}' 'in' exp    (rule 59)

	':'            shift, and enter state 150


State 148

	exp -> exp . '+' exp                                (rule 40)
	exp -> exp . '-' exp                                (rule 41)
	exp -> exp . '*' exp                                (rule 42)
	exp -> exp . '/' exp                                (rule 43)
	exp -> exp . '&&' exp                               (rule 44)
	exp -> exp . '{' exp '}' '||' '{' exp '}' exp       (rule 45)
	exp -> exp . '||' exp                               (rule 46)
	exp -> exp . '==' exp                               (rule 47)
	exp -> exp . '/=' exp                               (rule 48)
	exp -> exp . '<' exp                                (rule 49)
	exp -> exp . '>' exp                                (rule 50)
	exp -> exp . '<=' exp                               (rule 51)
	exp -> exp . '>=' exp                               (rule 52)
	exp -> exp . ':' exp                                (rule 53)
	exp -> exp . '!' VARID                              (rule 60)
	exp -> 'collect' '{' exp . '}' exp                  (rule 62)

	'{'            shift, and enter state 93
	'}'            shift, and enter state 149
	'!'            shift, and enter state 94
	':'            shift, and enter state 95
	'+'            shift, and enter state 96
	'-'            shift, and enter state 97
	'*'            shift, and enter state 98
	'/'            shift, and enter state 99
	'&&'           shift, and enter state 100
	'||'           shift, and enter state 101
	'=='           shift, and enter state 102
	'/='           shift, and enter state 103
	'<'            shift, and enter state 104
	'>'            shift, and enter state 105
	'<='           shift, and enter state 106
	'>='           shift, and enter state 107


State 149

	exp -> 'collect' '{' exp '}' . exp                  (rule 62)

	INT            shift, and enter state 52
	VARID          shift, and enter state 53
	CONID          shift, and enter state 54
	'()'           shift, and enter state 55
	'('            shift, and enter state 56
	'['            shift, and enter state 57
	'case'         shift, and enter state 58
	'let'          shift, and enter state 59
	'let\''        shift, and enter state 60
	'if'           shift, and enter state 61
	'trace'        shift, and enter state 62
	'fix'          shift, and enter state 63
	'fresh'        shift, and enter state 64
	'collect'      shift, and enter state 65
	'not'          shift, and enter state 66
	'+'            shift, and enter state 67
	'-'            shift, and enter state 68

	sexp           goto state 50
	exp            goto state 178

State 150

	exp -> 'fresh' '{' VARID ':' . btype '}' 'in' exp    (rule 59)

	VARID          shift, and enter state 12
	CONID          shift, and enter state 13
	'('            shift, and enter state 14
	'['            shift, and enter state 15

	btype          goto state 177
	btype1         goto state 8
	atype          goto state 9
	gtycon         goto state 10

State 151

	exp -> 'fix' '{' exp '}' .                          (rule 58)

	')'            reduce using rule 58
	']'            reduce using rule 58
	'{'            reduce using rule 58
	'}'            reduce using rule 58
	'!'            reduce using rule 58
	'of'           reduce using rule 58
	'end'          reduce using rule 58
	'in'           reduce using rule 58
	'then'         reduce using rule 58
	'else'         reduce using rule 58
	'data'         reduce using rule 58
	'sig'          reduce using rule 58
	'fun'          reduce using rule 58
	':'            reduce using rule 58
	','            reduce using rule 58
	'+'            reduce using rule 58
	'-'            reduce using rule 58
	'*'            reduce using rule 58
	'/'            reduce using rule 58
	'&&'           reduce using rule 58
	'||'           reduce using rule 58
	'=='           reduce using rule 58
	'/='           reduce using rule 58
	'<'            reduce using rule 58
	'>'            reduce using rule 58
	'<='           reduce using rule 58
	'>='           reduce using rule 58
	'|'            reduce using rule 58
	%eof           reduce using rule 58


State 152

	exp -> exp . '+' exp                                (rule 40)
	exp -> exp . '-' exp                                (rule 41)
	exp -> exp . '*' exp                                (rule 42)
	exp -> exp . '/' exp                                (rule 43)
	exp -> exp . '&&' exp                               (rule 44)
	exp -> exp . '{' exp '}' '||' '{' exp '}' exp       (rule 45)
	exp -> exp . '||' exp                               (rule 46)
	exp -> exp . '==' exp                               (rule 47)
	exp -> exp . '/=' exp                               (rule 48)
	exp -> exp . '<' exp                                (rule 49)
	exp -> exp . '>' exp                                (rule 50)
	exp -> exp . '<=' exp                               (rule 51)
	exp -> exp . '>=' exp                               (rule 52)
	exp -> exp . ':' exp                                (rule 53)
	exp -> exp . '!' VARID                              (rule 60)
	exp -> 'trace' VARID '(' exp . ')'                  (rule 61)

	')'            shift, and enter state 176
	'{'            shift, and enter state 93
	'!'            shift, and enter state 94
	':'            shift, and enter state 95
	'+'            shift, and enter state 96
	'-'            shift, and enter state 97
	'*'            shift, and enter state 98
	'/'            shift, and enter state 99
	'&&'           shift, and enter state 100
	'||'           shift, and enter state 101
	'=='           shift, and enter state 102
	'/='           shift, and enter state 103
	'<'            shift, and enter state 104
	'>'            shift, and enter state 105
	'<='           shift, and enter state 106
	'>='           shift, and enter state 107


State 153

	exp -> exp . '+' exp                                (rule 40)
	exp -> exp . '-' exp                                (rule 41)
	exp -> exp . '*' exp                                (rule 42)
	exp -> exp . '/' exp                                (rule 43)
	exp -> exp . '&&' exp                               (rule 44)
	exp -> exp . '{' exp '}' '||' '{' exp '}' exp       (rule 45)
	exp -> exp . '||' exp                               (rule 46)
	exp -> exp . '==' exp                               (rule 47)
	exp -> exp . '/=' exp                               (rule 48)
	exp -> exp . '<' exp                                (rule 49)
	exp -> exp . '>' exp                                (rule 50)
	exp -> exp . '<=' exp                               (rule 51)
	exp -> exp . '>=' exp                               (rule 52)
	exp -> exp . ':' exp                                (rule 53)
	exp -> 'if' exp 'then' exp . 'else' exp             (rule 57)
	exp -> exp . '!' VARID                              (rule 60)

	'{'            shift, and enter state 93
	'!'            shift, and enter state 94
	'else'         shift, and enter state 175
	':'            shift, and enter state 95
	'+'            shift, and enter state 96
	'-'            shift, and enter state 97
	'*'            shift, and enter state 98
	'/'            shift, and enter state 99
	'&&'           shift, and enter state 100
	'||'           shift, and enter state 101
	'=='           shift, and enter state 102
	'/='           shift, and enter state 103
	'<'            shift, and enter state 104
	'>'            shift, and enter state 105
	'<='           shift, and enter state 106
	'>='           shift, and enter state 107


State 154

	pat -> pat . ':' pat                                (rule 77)
	pat -> pat ':' pat .                                (rule 77)

	'='            reduce using rule 77
	')'            reduce using rule 77
	']'            reduce using rule 77
	':'            shift, and enter state 143
	','            reduce using rule 77
	'->'           reduce using rule 77


State 155

	exp -> exp . '+' exp                                (rule 40)
	exp -> exp . '-' exp                                (rule 41)
	exp -> exp . '*' exp                                (rule 42)
	exp -> exp . '/' exp                                (rule 43)
	exp -> exp . '&&' exp                               (rule 44)
	exp -> exp . '{' exp '}' '||' '{' exp '}' exp       (rule 45)
	exp -> exp . '||' exp                               (rule 46)
	exp -> exp . '==' exp                               (rule 47)
	exp -> exp . '/=' exp                               (rule 48)
	exp -> exp . '<' exp                                (rule 49)
	exp -> exp . '>' exp                                (rule 50)
	exp -> exp . '<=' exp                               (rule 51)
	exp -> exp . '>=' exp                               (rule 52)
	exp -> exp . ':' exp                                (rule 53)
	exp -> 'let\'' pat '=' exp . 'in' exp               (rule 56)
	exp -> exp . '!' VARID                              (rule 60)

	'{'            shift, and enter state 93
	'!'            shift, and enter state 94
	'in'           shift, and enter state 174
	':'            shift, and enter state 95
	'+'            shift, and enter state 96
	'-'            shift, and enter state 97
	'*'            shift, and enter state 98
	'/'            shift, and enter state 99
	'&&'           shift, and enter state 100
	'||'           shift, and enter state 101
	'=='           shift, and enter state 102
	'/='           shift, and enter state 103
	'<'            shift, and enter state 104
	'>'            shift, and enter state 105
	'<='           shift, and enter state 106
	'>='           shift, and enter state 107


State 156

	ppats -> ppat ppats .                               (rule 87)

	'='            reduce using rule 87
	')'            reduce using rule 87
	']'            reduce using rule 87
	':'            reduce using rule 87
	','            reduce using rule 87
	'->'           reduce using rule 87


State 157

	ppat -> '(' ccpats ')' .                            (rule 83)

	'='            reduce using rule 83
	VARID          reduce using rule 83
	CONID          reduce using rule 83
	'()'           reduce using rule 83
	'('            reduce using rule 83
	')'            reduce using rule 83
	'['            reduce using rule 83
	']'            reduce using rule 83
	'_'            reduce using rule 83
	':'            reduce using rule 83
	','            reduce using rule 83
	'->'           reduce using rule 83


State 158

	ppat -> '(' pat ')' .                               (rule 82)

	'='            reduce using rule 82
	VARID          reduce using rule 82
	CONID          reduce using rule 82
	'()'           reduce using rule 82
	'('            reduce using rule 82
	')'            reduce using rule 82
	'['            reduce using rule 82
	']'            reduce using rule 82
	'_'            reduce using rule 82
	':'            reduce using rule 82
	','            reduce using rule 82
	'->'           reduce using rule 82


State 159

	ccpats -> pat ',' . cpats                           (rule 90)

	VARID          shift, and enter state 79
	CONID          shift, and enter state 80
	'()'           shift, and enter state 81
	'('            shift, and enter state 82
	'['            shift, and enter state 83
	'_'            shift, and enter state 84

	pat            goto state 133
	ppat           goto state 78
	cpats          goto state 173
	ccpats         goto state 135

State 160

	ppat -> '[' cpats ']' .                             (rule 85)

	'='            reduce using rule 85
	VARID          reduce using rule 85
	CONID          reduce using rule 85
	'()'           reduce using rule 85
	'('            reduce using rule 85
	')'            reduce using rule 85
	'['            reduce using rule 85
	']'            reduce using rule 85
	'_'            reduce using rule 85
	':'            reduce using rule 85
	','            reduce using rule 85
	'->'           reduce using rule 85


State 161

	exp -> exp . '+' exp                                (rule 40)
	exp -> exp . '-' exp                                (rule 41)
	exp -> exp . '*' exp                                (rule 42)
	exp -> exp . '/' exp                                (rule 43)
	exp -> exp . '&&' exp                               (rule 44)
	exp -> exp . '{' exp '}' '||' '{' exp '}' exp       (rule 45)
	exp -> exp . '||' exp                               (rule 46)
	exp -> exp . '==' exp                               (rule 47)
	exp -> exp . '/=' exp                               (rule 48)
	exp -> exp . '<' exp                                (rule 49)
	exp -> exp . '>' exp                                (rule 50)
	exp -> exp . '<=' exp                               (rule 51)
	exp -> exp . '>=' exp                               (rule 52)
	exp -> exp . ':' exp                                (rule 53)
	exp -> 'let' decls 'in' exp .                       (rule 55)
	exp -> exp . '!' VARID                              (rule 60)

	')'            reduce using rule 55
	']'            reduce using rule 55
	'{'            shift, and enter state 93
	'}'            reduce using rule 55
	'!'            shift, and enter state 94
	'of'           reduce using rule 55
	'end'          reduce using rule 55
	'in'           reduce using rule 55
	'then'         reduce using rule 55
	'else'         reduce using rule 55
	'data'         reduce using rule 55
	'sig'          reduce using rule 55
	'fun'          reduce using rule 55
	':'            shift, and enter state 95
	','            reduce using rule 55
	'+'            shift, and enter state 96
	'-'            shift, and enter state 97
	'*'            shift, and enter state 98
	'/'            shift, and enter state 99
	'&&'           shift, and enter state 100
	'||'           shift, and enter state 101
	'=='           shift, and enter state 102
	'/='           shift, and enter state 103
	'<'            shift, and enter state 104
	'>'            shift, and enter state 105
	'<='           shift, and enter state 106
	'>='           shift, and enter state 107
	'|'            reduce using rule 55
	%eof           reduce using rule 55


State 162

	exp -> 'case' exp 'of' branches . 'end'             (rule 54)

	'end'          shift, and enter state 172


State 163

	branches -> branch .                                (rule 70)
	branches -> branch . branches                       (rule 71)

	'end'          reduce using rule 70
	'|'            shift, and enter state 164

	branches       goto state 171
	branch         goto state 163

State 164

	branch -> '|' . pat '->' exp                        (rule 72)
	branch -> '|' . VARID '%' pat '->' exp              (rule 73)
	branch -> '|' . INT '%' pat '->' exp                (rule 74)

	INT            shift, and enter state 169
	VARID          shift, and enter state 170
	CONID          shift, and enter state 80
	'()'           shift, and enter state 81
	'('            shift, and enter state 82
	'['            shift, and enter state 83
	'_'            shift, and enter state 84

	pat            goto state 168
	ppat           goto state 78

State 165

	ccexps -> exp ',' cexps .                           (rule 69)

	')'            reduce using rule 69
	']'            reduce using rule 69


State 166

	exp -> exp '{' exp '}' . '||' '{' exp '}' exp       (rule 45)

	'||'           shift, and enter state 167


State 167

	exp -> exp '{' exp '}' '||' . '{' exp '}' exp       (rule 45)

	'{'            shift, and enter state 185


State 168

	branch -> '|' pat . '->' exp                        (rule 72)
	pat -> pat . ':' pat                                (rule 77)

	':'            shift, and enter state 143
	'->'           shift, and enter state 184


State 169

	branch -> '|' INT . '%' pat '->' exp                (rule 74)

	'%'            shift, and enter state 183


State 170

	branch -> '|' VARID . '%' pat '->' exp              (rule 73)
	ppat -> VARID .                                     (rule 79)

	':'            reduce using rule 79
	'%'            shift, and enter state 182
	'->'           reduce using rule 79


State 171

	branches -> branch branches .                       (rule 71)

	'end'          reduce using rule 71


State 172

	exp -> 'case' exp 'of' branches 'end' .             (rule 54)

	')'            reduce using rule 54
	']'            reduce using rule 54
	'{'            reduce using rule 54
	'}'            reduce using rule 54
	'!'            reduce using rule 54
	'of'           reduce using rule 54
	'end'          reduce using rule 54
	'in'           reduce using rule 54
	'then'         reduce using rule 54
	'else'         reduce using rule 54
	'data'         reduce using rule 54
	'sig'          reduce using rule 54
	'fun'          reduce using rule 54
	':'            reduce using rule 54
	','            reduce using rule 54
	'+'            reduce using rule 54
	'-'            reduce using rule 54
	'*'            reduce using rule 54
	'/'            reduce using rule 54
	'&&'           reduce using rule 54
	'||'           reduce using rule 54
	'=='           reduce using rule 54
	'/='           reduce using rule 54
	'<'            reduce using rule 54
	'>'            reduce using rule 54
	'<='           reduce using rule 54
	'>='           reduce using rule 54
	'|'            reduce using rule 54
	%eof           reduce using rule 54


State 173

	ccpats -> pat ',' cpats .                           (rule 90)

	')'            reduce using rule 90
	']'            reduce using rule 90


State 174

	exp -> 'let\'' pat '=' exp 'in' . exp               (rule 56)

	INT            shift, and enter state 52
	VARID          shift, and enter state 53
	CONID          shift, and enter state 54
	'()'           shift, and enter state 55
	'('            shift, and enter state 56
	'['            shift, and enter state 57
	'case'         shift, and enter state 58
	'let'          shift, and enter state 59
	'let\''        shift, and enter state 60
	'if'           shift, and enter state 61
	'trace'        shift, and enter state 62
	'fix'          shift, and enter state 63
	'fresh'        shift, and enter state 64
	'collect'      shift, and enter state 65
	'not'          shift, and enter state 66
	'+'            shift, and enter state 67
	'-'            shift, and enter state 68

	sexp           goto state 50
	exp            goto state 181

State 175

	exp -> 'if' exp 'then' exp 'else' . exp             (rule 57)

	INT            shift, and enter state 52
	VARID          shift, and enter state 53
	CONID          shift, and enter state 54
	'()'           shift, and enter state 55
	'('            shift, and enter state 56
	'['            shift, and enter state 57
	'case'         shift, and enter state 58
	'let'          shift, and enter state 59
	'let\''        shift, and enter state 60
	'if'           shift, and enter state 61
	'trace'        shift, and enter state 62
	'fix'          shift, and enter state 63
	'fresh'        shift, and enter state 64
	'collect'      shift, and enter state 65
	'not'          shift, and enter state 66
	'+'            shift, and enter state 67
	'-'            shift, and enter state 68

	sexp           goto state 50
	exp            goto state 180

State 176

	exp -> 'trace' VARID '(' exp ')' .                  (rule 61)

	')'            reduce using rule 61
	']'            reduce using rule 61
	'{'            reduce using rule 61
	'}'            reduce using rule 61
	'!'            reduce using rule 61
	'of'           reduce using rule 61
	'end'          reduce using rule 61
	'in'           reduce using rule 61
	'then'         reduce using rule 61
	'else'         reduce using rule 61
	'data'         reduce using rule 61
	'sig'          reduce using rule 61
	'fun'          reduce using rule 61
	':'            reduce using rule 61
	','            reduce using rule 61
	'+'            reduce using rule 61
	'-'            reduce using rule 61
	'*'            reduce using rule 61
	'/'            reduce using rule 61
	'&&'           reduce using rule 61
	'||'           reduce using rule 61
	'=='           reduce using rule 61
	'/='           reduce using rule 61
	'<'            reduce using rule 61
	'>'            reduce using rule 61
	'<='           reduce using rule 61
	'>='           reduce using rule 61
	'|'            reduce using rule 61
	%eof           reduce using rule 61


State 177

	exp -> 'fresh' '{' VARID ':' btype . '}' 'in' exp    (rule 59)

	'}'            shift, and enter state 179


State 178

	exp -> exp . '+' exp                                (rule 40)
	exp -> exp . '-' exp                                (rule 41)
	exp -> exp . '*' exp                                (rule 42)
	exp -> exp . '/' exp                                (rule 43)
	exp -> exp . '&&' exp                               (rule 44)
	exp -> exp . '{' exp '}' '||' '{' exp '}' exp       (rule 45)
	exp -> exp . '||' exp                               (rule 46)
	exp -> exp . '==' exp                               (rule 47)
	exp -> exp . '/=' exp                               (rule 48)
	exp -> exp . '<' exp                                (rule 49)
	exp -> exp . '>' exp                                (rule 50)
	exp -> exp . '<=' exp                               (rule 51)
	exp -> exp . '>=' exp                               (rule 52)
	exp -> exp . ':' exp                                (rule 53)
	exp -> exp . '!' VARID                              (rule 60)
	exp -> 'collect' '{' exp '}' exp .                  (rule 62)

	')'            reduce using rule 62
	']'            reduce using rule 62
	'{'            reduce using rule 62
	'}'            reduce using rule 62
	'!'            reduce using rule 62
	'of'           reduce using rule 62
	'end'          reduce using rule 62
	'in'           reduce using rule 62
	'then'         reduce using rule 62
	'else'         reduce using rule 62
	'data'         reduce using rule 62
	'sig'          reduce using rule 62
	'fun'          reduce using rule 62
	':'            reduce using rule 62
	','            reduce using rule 62
	'+'            shift, and enter state 96
	'-'            shift, and enter state 97
	'*'            shift, and enter state 98
	'/'            shift, and enter state 99
	'&&'           shift, and enter state 100
	'||'           shift, and enter state 101
	'=='           shift, and enter state 102
	'/='           shift, and enter state 103
	'<'            shift, and enter state 104
	'>'            shift, and enter state 105
	'<='           shift, and enter state 106
	'>='           shift, and enter state 107
	'|'            reduce using rule 62
	%eof           reduce using rule 62


State 179

	exp -> 'fresh' '{' VARID ':' btype '}' . 'in' exp    (rule 59)

	'in'           shift, and enter state 190


State 180

	exp -> exp . '+' exp                                (rule 40)
	exp -> exp . '-' exp                                (rule 41)
	exp -> exp . '*' exp                                (rule 42)
	exp -> exp . '/' exp                                (rule 43)
	exp -> exp . '&&' exp                               (rule 44)
	exp -> exp . '{' exp '}' '||' '{' exp '}' exp       (rule 45)
	exp -> exp . '||' exp                               (rule 46)
	exp -> exp . '==' exp                               (rule 47)
	exp -> exp . '/=' exp                               (rule 48)
	exp -> exp . '<' exp                                (rule 49)
	exp -> exp . '>' exp                                (rule 50)
	exp -> exp . '<=' exp                               (rule 51)
	exp -> exp . '>=' exp                               (rule 52)
	exp -> exp . ':' exp                                (rule 53)
	exp -> 'if' exp 'then' exp 'else' exp .             (rule 57)
	exp -> exp . '!' VARID                              (rule 60)

	')'            reduce using rule 57
	']'            reduce using rule 57
	'{'            shift, and enter state 93
	'}'            reduce using rule 57
	'!'            shift, and enter state 94
	'of'           reduce using rule 57
	'end'          reduce using rule 57
	'in'           reduce using rule 57
	'then'         reduce using rule 57
	'else'         reduce using rule 57
	'data'         reduce using rule 57
	'sig'          reduce using rule 57
	'fun'          reduce using rule 57
	':'            shift, and enter state 95
	','            reduce using rule 57
	'+'            shift, and enter state 96
	'-'            shift, and enter state 97
	'*'            shift, and enter state 98
	'/'            shift, and enter state 99
	'&&'           shift, and enter state 100
	'||'           shift, and enter state 101
	'=='           shift, and enter state 102
	'/='           shift, and enter state 103
	'<'            shift, and enter state 104
	'>'            shift, and enter state 105
	'<='           shift, and enter state 106
	'>='           shift, and enter state 107
	'|'            reduce using rule 57
	%eof           reduce using rule 57


State 181

	exp -> exp . '+' exp                                (rule 40)
	exp -> exp . '-' exp                                (rule 41)
	exp -> exp . '*' exp                                (rule 42)
	exp -> exp . '/' exp                                (rule 43)
	exp -> exp . '&&' exp                               (rule 44)
	exp -> exp . '{' exp '}' '||' '{' exp '}' exp       (rule 45)
	exp -> exp . '||' exp                               (rule 46)
	exp -> exp . '==' exp                               (rule 47)
	exp -> exp . '/=' exp                               (rule 48)
	exp -> exp . '<' exp                                (rule 49)
	exp -> exp . '>' exp                                (rule 50)
	exp -> exp . '<=' exp                               (rule 51)
	exp -> exp . '>=' exp                               (rule 52)
	exp -> exp . ':' exp                                (rule 53)
	exp -> 'let\'' pat '=' exp 'in' exp .               (rule 56)
	exp -> exp . '!' VARID                              (rule 60)

	')'            reduce using rule 56
	']'            reduce using rule 56
	'{'            shift, and enter state 93
	'}'            reduce using rule 56
	'!'            shift, and enter state 94
	'of'           reduce using rule 56
	'end'          reduce using rule 56
	'in'           reduce using rule 56
	'then'         reduce using rule 56
	'else'         reduce using rule 56
	'data'         reduce using rule 56
	'sig'          reduce using rule 56
	'fun'          reduce using rule 56
	':'            shift, and enter state 95
	','            reduce using rule 56
	'+'            shift, and enter state 96
	'-'            shift, and enter state 97
	'*'            shift, and enter state 98
	'/'            shift, and enter state 99
	'&&'           shift, and enter state 100
	'||'           shift, and enter state 101
	'=='           shift, and enter state 102
	'/='           shift, and enter state 103
	'<'            shift, and enter state 104
	'>'            shift, and enter state 105
	'<='           shift, and enter state 106
	'>='           shift, and enter state 107
	'|'            reduce using rule 56
	%eof           reduce using rule 56


State 182

	branch -> '|' VARID '%' . pat '->' exp              (rule 73)

	VARID          shift, and enter state 79
	CONID          shift, and enter state 80
	'()'           shift, and enter state 81
	'('            shift, and enter state 82
	'['            shift, and enter state 83
	'_'            shift, and enter state 84

	pat            goto state 189
	ppat           goto state 78

State 183

	branch -> '|' INT '%' . pat '->' exp                (rule 74)

	VARID          shift, and enter state 79
	CONID          shift, and enter state 80
	'()'           shift, and enter state 81
	'('            shift, and enter state 82
	'['            shift, and enter state 83
	'_'            shift, and enter state 84

	pat            goto state 188
	ppat           goto state 78

State 184

	branch -> '|' pat '->' . exp                        (rule 72)

	INT            shift, and enter state 52
	VARID          shift, and enter state 53
	CONID          shift, and enter state 54
	'()'           shift, and enter state 55
	'('            shift, and enter state 56
	'['            shift, and enter state 57
	'case'         shift, and enter state 58
	'let'          shift, and enter state 59
	'let\''        shift, and enter state 60
	'if'           shift, and enter state 61
	'trace'        shift, and enter state 62
	'fix'          shift, and enter state 63
	'fresh'        shift, and enter state 64
	'collect'      shift, and enter state 65
	'not'          shift, and enter state 66
	'+'            shift, and enter state 67
	'-'            shift, and enter state 68

	sexp           goto state 50
	exp            goto state 187

State 185

	exp -> exp '{' exp '}' '||' '{' . exp '}' exp       (rule 45)

	INT            shift, and enter state 52
	VARID          shift, and enter state 53
	CONID          shift, and enter state 54
	'()'           shift, and enter state 55
	'('            shift, and enter state 56
	'['            shift, and enter state 57
	'case'         shift, and enter state 58
	'let'          shift, and enter state 59
	'let\''        shift, and enter state 60
	'if'           shift, and enter state 61
	'trace'        shift, and enter state 62
	'fix'          shift, and enter state 63
	'fresh'        shift, and enter state 64
	'collect'      shift, and enter state 65
	'not'          shift, and enter state 66
	'+'            shift, and enter state 67
	'-'            shift, and enter state 68

	sexp           goto state 50
	exp            goto state 186

State 186

	exp -> exp . '+' exp                                (rule 40)
	exp -> exp . '-' exp                                (rule 41)
	exp -> exp . '*' exp                                (rule 42)
	exp -> exp . '/' exp                                (rule 43)
	exp -> exp . '&&' exp                               (rule 44)
	exp -> exp . '{' exp '}' '||' '{' exp '}' exp       (rule 45)
	exp -> exp '{' exp '}' '||' '{' exp . '}' exp       (rule 45)
	exp -> exp . '||' exp                               (rule 46)
	exp -> exp . '==' exp                               (rule 47)
	exp -> exp . '/=' exp                               (rule 48)
	exp -> exp . '<' exp                                (rule 49)
	exp -> exp . '>' exp                                (rule 50)
	exp -> exp . '<=' exp                               (rule 51)
	exp -> exp . '>=' exp                               (rule 52)
	exp -> exp . ':' exp                                (rule 53)
	exp -> exp . '!' VARID                              (rule 60)

	'{'            shift, and enter state 93
	'}'            shift, and enter state 194
	'!'            shift, and enter state 94
	':'            shift, and enter state 95
	'+'            shift, and enter state 96
	'-'            shift, and enter state 97
	'*'            shift, and enter state 98
	'/'            shift, and enter state 99
	'&&'           shift, and enter state 100
	'||'           shift, and enter state 101
	'=='           shift, and enter state 102
	'/='           shift, and enter state 103
	'<'            shift, and enter state 104
	'>'            shift, and enter state 105
	'<='           shift, and enter state 106
	'>='           shift, and enter state 107


State 187

	exp -> exp . '+' exp                                (rule 40)
	exp -> exp . '-' exp                                (rule 41)
	exp -> exp . '*' exp                                (rule 42)
	exp -> exp . '/' exp                                (rule 43)
	exp -> exp . '&&' exp                               (rule 44)
	exp -> exp . '{' exp '}' '||' '{' exp '}' exp       (rule 45)
	exp -> exp . '||' exp                               (rule 46)
	exp -> exp . '==' exp                               (rule 47)
	exp -> exp . '/=' exp                               (rule 48)
	exp -> exp . '<' exp                                (rule 49)
	exp -> exp . '>' exp                                (rule 50)
	exp -> exp . '<=' exp                               (rule 51)
	exp -> exp . '>=' exp                               (rule 52)
	exp -> exp . ':' exp                                (rule 53)
	exp -> exp . '!' VARID                              (rule 60)
	branch -> '|' pat '->' exp .                        (rule 72)

	'{'            shift, and enter state 93
	'!'            shift, and enter state 94
	'end'          reduce using rule 72
	':'            shift, and enter state 95
	'+'            shift, and enter state 96
	'-'            shift, and enter state 97
	'*'            shift, and enter state 98
	'/'            shift, and enter state 99
	'&&'           shift, and enter state 100
	'||'           shift, and enter state 101
	'=='           shift, and enter state 102
	'/='           shift, and enter state 103
	'<'            shift, and enter state 104
	'>'            shift, and enter state 105
	'<='           shift, and enter state 106
	'>='           shift, and enter state 107
	'|'            reduce using rule 72


State 188

	branch -> '|' INT '%' pat . '->' exp                (rule 74)
	pat -> pat . ':' pat                                (rule 77)

	':'            shift, and enter state 143
	'->'           shift, and enter state 193


State 189

	branch -> '|' VARID '%' pat . '->' exp              (rule 73)
	pat -> pat . ':' pat                                (rule 77)

	':'            shift, and enter state 143
	'->'           shift, and enter state 192


State 190

	exp -> 'fresh' '{' VARID ':' btype '}' 'in' . exp    (rule 59)

	INT            shift, and enter state 52
	VARID          shift, and enter state 53
	CONID          shift, and enter state 54
	'()'           shift, and enter state 55
	'('            shift, and enter state 56
	'['            shift, and enter state 57
	'case'         shift, and enter state 58
	'let'          shift, and enter state 59
	'let\''        shift, and enter state 60
	'if'           shift, and enter state 61
	'trace'        shift, and enter state 62
	'fix'          shift, and enter state 63
	'fresh'        shift, and enter state 64
	'collect'      shift, and enter state 65
	'not'          shift, and enter state 66
	'+'            shift, and enter state 67
	'-'            shift, and enter state 68

	sexp           goto state 50
	exp            goto state 191

State 191

	exp -> exp . '+' exp                                (rule 40)
	exp -> exp . '-' exp                                (rule 41)
	exp -> exp . '*' exp                                (rule 42)
	exp -> exp . '/' exp                                (rule 43)
	exp -> exp . '&&' exp                               (rule 44)
	exp -> exp . '{' exp '}' '||' '{' exp '}' exp       (rule 45)
	exp -> exp . '||' exp                               (rule 46)
	exp -> exp . '==' exp                               (rule 47)
	exp -> exp . '/=' exp                               (rule 48)
	exp -> exp . '<' exp                                (rule 49)
	exp -> exp . '>' exp                                (rule 50)
	exp -> exp . '<=' exp                               (rule 51)
	exp -> exp . '>=' exp                               (rule 52)
	exp -> exp . ':' exp                                (rule 53)
	exp -> 'fresh' '{' VARID ':' btype '}' 'in' exp .    (rule 59)
	exp -> exp . '!' VARID                              (rule 60)

	')'            reduce using rule 59
	']'            reduce using rule 59
	'{'            shift, and enter state 93
	'}'            reduce using rule 59
	'!'            shift, and enter state 94
	'of'           reduce using rule 59
	'end'          reduce using rule 59
	'in'           reduce using rule 59
	'then'         reduce using rule 59
	'else'         reduce using rule 59
	'data'         reduce using rule 59
	'sig'          reduce using rule 59
	'fun'          reduce using rule 59
	':'            shift, and enter state 95
	','            reduce using rule 59
	'+'            shift, and enter state 96
	'-'            shift, and enter state 97
	'*'            shift, and enter state 98
	'/'            shift, and enter state 99
	'&&'           shift, and enter state 100
	'||'           shift, and enter state 101
	'=='           shift, and enter state 102
	'/='           shift, and enter state 103
	'<'            shift, and enter state 104
	'>'            shift, and enter state 105
	'<='           shift, and enter state 106
	'>='           shift, and enter state 107
	'|'            reduce using rule 59
	%eof           reduce using rule 59


State 192

	branch -> '|' VARID '%' pat '->' . exp              (rule 73)

	INT            shift, and enter state 52
	VARID          shift, and enter state 53
	CONID          shift, and enter state 54
	'()'           shift, and enter state 55
	'('            shift, and enter state 56
	'['            shift, and enter state 57
	'case'         shift, and enter state 58
	'let'          shift, and enter state 59
	'let\''        shift, and enter state 60
	'if'           shift, and enter state 61
	'trace'        shift, and enter state 62
	'fix'          shift, and enter state 63
	'fresh'        shift, and enter state 64
	'collect'      shift, and enter state 65
	'not'          shift, and enter state 66
	'+'            shift, and enter state 67
	'-'            shift, and enter state 68

	sexp           goto state 50
	exp            goto state 197

State 193

	branch -> '|' INT '%' pat '->' . exp                (rule 74)

	INT            shift, and enter state 52
	VARID          shift, and enter state 53
	CONID          shift, and enter state 54
	'()'           shift, and enter state 55
	'('            shift, and enter state 56
	'['            shift, and enter state 57
	'case'         shift, and enter state 58
	'let'          shift, and enter state 59
	'let\''        shift, and enter state 60
	'if'           shift, and enter state 61
	'trace'        shift, and enter state 62
	'fix'          shift, and enter state 63
	'fresh'        shift, and enter state 64
	'collect'      shift, and enter state 65
	'not'          shift, and enter state 66
	'+'            shift, and enter state 67
	'-'            shift, and enter state 68

	sexp           goto state 50
	exp            goto state 196

State 194

	exp -> exp '{' exp '}' '||' '{' exp '}' . exp       (rule 45)

	INT            shift, and enter state 52
	VARID          shift, and enter state 53
	CONID          shift, and enter state 54
	'()'           shift, and enter state 55
	'('            shift, and enter state 56
	'['            shift, and enter state 57
	'case'         shift, and enter state 58
	'let'          shift, and enter state 59
	'let\''        shift, and enter state 60
	'if'           shift, and enter state 61
	'trace'        shift, and enter state 62
	'fix'          shift, and enter state 63
	'fresh'        shift, and enter state 64
	'collect'      shift, and enter state 65
	'not'          shift, and enter state 66
	'+'            shift, and enter state 67
	'-'            shift, and enter state 68

	sexp           goto state 50
	exp            goto state 195

State 195

	exp -> exp . '+' exp                                (rule 40)
	exp -> exp . '-' exp                                (rule 41)
	exp -> exp . '*' exp                                (rule 42)
	exp -> exp . '/' exp                                (rule 43)
	exp -> exp . '&&' exp                               (rule 44)
	exp -> exp . '{' exp '}' '||' '{' exp '}' exp       (rule 45)
	exp -> exp '{' exp '}' '||' '{' exp '}' exp .       (rule 45)
	exp -> exp . '||' exp                               (rule 46)
	exp -> exp . '==' exp                               (rule 47)
	exp -> exp . '/=' exp                               (rule 48)
	exp -> exp . '<' exp                                (rule 49)
	exp -> exp . '>' exp                                (rule 50)
	exp -> exp . '<=' exp                               (rule 51)
	exp -> exp . '>=' exp                               (rule 52)
	exp -> exp . ':' exp                                (rule 53)
	exp -> exp . '!' VARID                              (rule 60)

	')'            reduce using rule 45
	']'            reduce using rule 45
	'{'            reduce using rule 45
	'}'            reduce using rule 45
	'!'            reduce using rule 45
	'of'           reduce using rule 45
	'end'          reduce using rule 45
	'in'           reduce using rule 45
	'then'         reduce using rule 45
	'else'         reduce using rule 45
	'data'         reduce using rule 45
	'sig'          reduce using rule 45
	'fun'          reduce using rule 45
	':'            reduce using rule 45
	','            reduce using rule 45
	'+'            shift, and enter state 96
	'-'            shift, and enter state 97
	'*'            shift, and enter state 98
	'/'            shift, and enter state 99
	'&&'           shift, and enter state 100
	'||'           shift, and enter state 101
	'=='           shift, and enter state 102
	'/='           shift, and enter state 103
	'<'            shift, and enter state 104
	'>'            shift, and enter state 105
	'<='           shift, and enter state 106
	'>='           shift, and enter state 107
	'|'            reduce using rule 45
	%eof           reduce using rule 45


State 196

	exp -> exp . '+' exp                                (rule 40)
	exp -> exp . '-' exp                                (rule 41)
	exp -> exp . '*' exp                                (rule 42)
	exp -> exp . '/' exp                                (rule 43)
	exp -> exp . '&&' exp                               (rule 44)
	exp -> exp . '{' exp '}' '||' '{' exp '}' exp       (rule 45)
	exp -> exp . '||' exp                               (rule 46)
	exp -> exp . '==' exp                               (rule 47)
	exp -> exp . '/=' exp                               (rule 48)
	exp -> exp . '<' exp                                (rule 49)
	exp -> exp . '>' exp                                (rule 50)
	exp -> exp . '<=' exp                               (rule 51)
	exp -> exp . '>=' exp                               (rule 52)
	exp -> exp . ':' exp                                (rule 53)
	exp -> exp . '!' VARID                              (rule 60)
	branch -> '|' INT '%' pat '->' exp .                (rule 74)

	'{'            shift, and enter state 93
	'!'            shift, and enter state 94
	'end'          reduce using rule 74
	':'            shift, and enter state 95
	'+'            shift, and enter state 96
	'-'            shift, and enter state 97
	'*'            shift, and enter state 98
	'/'            shift, and enter state 99
	'&&'           shift, and enter state 100
	'||'           shift, and enter state 101
	'=='           shift, and enter state 102
	'/='           shift, and enter state 103
	'<'            shift, and enter state 104
	'>'            shift, and enter state 105
	'<='           shift, and enter state 106
	'>='           shift, and enter state 107
	'|'            reduce using rule 74


State 197

	exp -> exp . '+' exp                                (rule 40)
	exp -> exp . '-' exp                                (rule 41)
	exp -> exp . '*' exp                                (rule 42)
	exp -> exp . '/' exp                                (rule 43)
	exp -> exp . '&&' exp                               (rule 44)
	exp -> exp . '{' exp '}' '||' '{' exp '}' exp       (rule 45)
	exp -> exp . '||' exp                               (rule 46)
	exp -> exp . '==' exp                               (rule 47)
	exp -> exp . '/=' exp                               (rule 48)
	exp -> exp . '<' exp                                (rule 49)
	exp -> exp . '>' exp                                (rule 50)
	exp -> exp . '<=' exp                               (rule 51)
	exp -> exp . '>=' exp                               (rule 52)
	exp -> exp . ':' exp                                (rule 53)
	exp -> exp . '!' VARID                              (rule 60)
	branch -> '|' VARID '%' pat '->' exp .              (rule 73)

	'{'            shift, and enter state 93
	'!'            shift, and enter state 94
	'end'          reduce using rule 73
	':'            shift, and enter state 95
	'+'            shift, and enter state 96
	'-'            shift, and enter state 97
	'*'            shift, and enter state 98
	'/'            shift, and enter state 99
	'&&'           shift, and enter state 100
	'||'           shift, and enter state 101
	'=='           shift, and enter state 102
	'/='           shift, and enter state 103
	'<'            shift, and enter state 104
	'>'            shift, and enter state 105
	'<='           shift, and enter state 106
	'>='           shift, and enter state 107
	'|'            reduce using rule 73


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 91
Number of terminals: 48
Number of non-terminals: 29
Number of states: 198
